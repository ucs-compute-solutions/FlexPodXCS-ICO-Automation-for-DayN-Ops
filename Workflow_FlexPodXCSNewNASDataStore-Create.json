[{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"An IPv4 address represented in dot decimal notation, such as '192.168.1.6'.","Label":"IPv4 Address","Name":"IpV4AddressType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"An IPv4 address represented in dot decimal notation, such as '192.168.1.6'.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"IPv4 Address","Name":"IpV4Address","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints","Regex":"^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Platform(s) supported for storage target devices.","Label":"Storage Platform Type","Name":"StoragePlatformType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Platform type for storage target device.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"Radio"},"Label":"Storage Platform Type","Name":"StoragePlatformType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Pure FlashArray","ObjectType":"workflow.EnumEntry","Value":"storage.PureArray"},{"Label":"Hitachi Virtual Storage Platform","ObjectType":"workflow.EnumEntry","Value":"storage.HitachiArray"},{"Label":"NetApp Active IQ Unified Manager","ObjectType":"workflow.EnumEntry","Value":"storage.NetAppCluster"},{"Label":"None","ObjectType":"workflow.EnumEntry","Value":"None"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"A network interface consisting of IPv4 address, IPv4 subnet mask, broadcast domain name  and home node name.","Label":"NetApp Network Interface Type","Name":"NetAppNetworkInterfacesType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The network interface name can contain only alphanumeric characters and \".\", \"-\" or \"_\".","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface Name","Name":"InterfaceName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[.,-A-z0-9._]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"IPv4 IP address to be configured for the virtual machine's guest operating system. Leave it blank for DHCP.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface IPv4 IP address","Name":"InterfaceIpv4Address","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"NetApp IPv4 Subnet Mask to be configured for the virtual machine's guest operating system.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface IPv4 Subnet Mask","Name":"InterfaceIpv4subnetmask","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4SubnetMaskType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Broadcast domain.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Broadcast Domain","Name":"BroadcastDomain","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Home node name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Home Node Name","Name":"HomeNodeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"NetApp virtual machine options.","Label":"NetApp Virtual Machine Options","Name":"NetAppVirtualMachineOptionsType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"ManageAdministratorAccount","EnableParameters":["Password","CreateManagementInterface"],"Name":"show-admin-account","ObjectType":"workflow.ParameterSet","Value":"true"},{"Condition":"eq","ControlParameter":"CreateManagementInterface","EnableParameters":["ManagementInterfaceDetails"],"Name":"show-management-interface","ObjectType":"workflow.ParameterSet","Value":"true"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[{"Label":"NFS","ObjectType":"workflow.EnumEntry","Value":"nfs"},{"Label":"iSCSI","ObjectType":"workflow.EnumEntry","Value":"iscsi"},{"Label":"FCP","ObjectType":"workflow.EnumEntry","Value":"fcp"},{"Label":"CIFS","ObjectType":"workflow.EnumEntry","Value":"cifs"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of VM protocols.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage VM Protocols","Max":500,"Min":1,"Name":"StorageVmProtocols","ObjectType":"workflow.ArrayDataType","Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Manage the storage virtual machine administrator account (user name: vsadmin).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Manage Administrator Account: vsadmin","Name":"ManageAdministratorAccount","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Set the password for the storage virtual machine administrator account (user name: vsadmin). The password can be between 8 - 128 characters long.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Password for vsadmin","Name":"Password","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":128,"Min":8,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Secure":true,"Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Whether or not to create a management interface. If selected, provide the management interface details.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Create Management Interface","Name":"CreateManagementInterface","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Management Interface Details.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Management Interface Details","Name":"ManagementInterfaceDetails","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppNetworkInterfacesType","ObjectType":"workflow.CustomDataProperty"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Storage vendor virtual machine options.","Label":"Storage Vendor Virtual Machine Options","Name":"StorageVendorVirtualMachineOptionsType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"PlatformType","EnableParameters":["NetAppVirtualMachineOptions","RouteDestinationIpv4Gateway"],"Name":"show-netapp","ObjectType":"workflow.ParameterSet","Value":"storage.NetAppCluster"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Platform type of the storage device.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Platform Type","Name":"PlatformType","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StoragePlatformType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"NetApp virtual machine options.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NetApp Virtual Machine Options","Name":"NetAppVirtualMachineOptions","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppVirtualMachineOptionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"ArrayItemType":{"ObjectType":"workflow.CustomArrayItem","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Route destination IPv4 gateway.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Route Destination IPv4 Gateway","Max":500,"Min":1,"Name":"RouteDestinationIpv4Gateway","ObjectType":"workflow.ArrayDataType"}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"NetApp IP interface options.","Label":"NetApp IP Interface Options","Name":"NetAppIpInterfaceLocationOptionsType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Location home node is the node to which the LIF returns when the network interface revert command is run.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Location Home Node","Name":"LocationHomeNode","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Location home port is the port to which the LIF returns when the network interface revert command is run.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Location Home Port","Name":"LocationHomePort","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Location broadcast domain contains the home port of the logical interface.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Location Broadcast Domain","Name":"LocationBroadcastDomain","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"An IPv4 subnet mask represented in dot decimal notation, such as '255.255.255.0'.","Label":"IPv4 Subnet Mask","Name":"IpV4SubnetMaskType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"An IPv4 subnet mask represented in dot decimal notation, such as '255.255.255.0'.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"IPv4 Subnet Mask","Name":"IpV4SubnetMaskType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints","Regex":"^(((255.){3}(255|254|252|248|240|224|192|128|0))|((255.){2}(255|254|252|248|240|224|192|128|0).0)|((255.)(255|254|252|248|240|224|192|128|0)(.0){2})|((255|254|252|248|240|224|192|128|0+)(.0){3}))$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Storage capacity.","Label":"Storage Capacity","Name":"StorageCapacityType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Size must be a number (used in conjunction with unit).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Size","Name":"VolumeSize","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":19,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9]{1,19}"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Unit is a string with a single character unit symbol. Valid unit symbols are K, M, G, T, and P representing Bytes, Kilobyte, Megabyte, Gigabyte, Terabyte, and Petabyte respectively, where one Kilobyte equals 1024 Bytes, one Megabyte equals 1048576 Bytes and so on.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Unit","Name":"VolumeUnit","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"KiB","ObjectType":"workflow.EnumEntry","Value":"K"},{"Label":"MiB","ObjectType":"workflow.EnumEntry","Value":"M"},{"Label":"GiB","ObjectType":"workflow.EnumEntry","Value":"G"},{"Label":"TiB","ObjectType":"workflow.EnumEntry","Value":"T"},{"Label":"PiB","ObjectType":"workflow.EnumEntry","Value":"P"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Datacenter","Label":"Datacenter","Name":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","InventoryPath"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseDatacenter)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"InventoryPath"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Cluster.","Label":"Cluster","Name":"HypervisorClusterType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","InventoryPath"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseCluster)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"InventoryPath"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Type and version of datastore.","Label":"Types of Datastore","Name":"HypervisorDatastoreVersionsType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"VMFSVersion","EnableParameters":["Disk"],"Name":"rule-1","ObjectType":"workflow.ParameterSet","Value":"VMFS5"},{"Condition":"eq","ControlParameter":"VMFSVersion","EnableParameters":["Disk"],"Name":"rule-2","ObjectType":"workflow.ParameterSet","Value":"VMFS6"},{"Condition":"eq","ControlParameter":"VMFSVersion","EnableParameters":["RemotePath","RemoteHostNames","AccessMode"],"Name":"rule-3","ObjectType":"workflow.ParameterSet","Value":"NFS"},{"Condition":"eq","ControlParameter":"VMFSVersion","EnableParameters":["RemotePath","RemoteHostNames","AccessMode","SecurityType"],"Name":"rule-4","ObjectType":"workflow.ParameterSet","Value":"NFS41"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type and version of datastore","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"Radio"},"Label":"Type of Datastore","Name":"VMFSVersion","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"VMFS-6","ObjectType":"workflow.EnumEntry","Value":"VMFS6"},{"Label":"VMFS-5","ObjectType":"workflow.EnumEntry","Value":"VMFS5"},{"Label":"NFS3","ObjectType":"workflow.EnumEntry","Value":"NFS"},{"Label":"NFS4.1","ObjectType":"workflow.EnumEntry","Value":"NFS41"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Canonical disk (also called NaaId) that backs the datastore (example: 6cc167e972c4928023401a54db995b66).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk","Name":"Disk","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The remote path of the NFS mount point.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Remote Path","Name":"RemotePath","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The hostnames or IP addresses of remote NFS server. In case of NFS v4.1 this may have multiple entries.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NFS Server Address","Max":32,"Min":1,"Name":"RemoteHostNames","ObjectType":"workflow.ArrayDataType","Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Access mode for the NFS server. Select read-only if volume is exported as read-only.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"Radio"},"Label":"Access Mode","Name":"AccessMode","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Read Write","ObjectType":"workflow.EnumEntry","Value":"readWrite"},{"Label":"Read Only","ObjectType":"workflow.EnumEntry","Value":"readOnly"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Security for the NFS datastore. Default is the basic AUTH_SYS security.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"Radio"},"Label":"Security type","Name":"SecurityType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Default Security","ObjectType":"workflow.EnumEntry","Value":"AUTH_SYS"},{"Label":"Kerberos for authentication only","ObjectType":"workflow.EnumEntry","Value":"SEC_KRB5"},{"Label":"Kerberos with Data Integrity","ObjectType":"workflow.EnumEntry","Value":"SEC_KRB5I"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Storage target device.","Label":"Storage Target Datatype","Name":"StorageTargetDataType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"CustomDataTypeProperties":{"ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage target device.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[{"ConnectorAttribute":"RegisteredDevice.Moid","ConstraintAttributes":["ObjectType","ApiVersion"],"DisplayAttributes":["Name","SvpIp","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq storage.BaseArray)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"SupportedObjects":["storage.PureArray","storage.HitachiArray","storage.NetAppCluster"]}],"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Storage vendor virtual machine name.","Label":"Storage Vendor Virtual Machine","Name":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"PlatformType","EnableParameters":["StorageVirtualMachineName"],"Name":"show-netapp","ObjectType":"workflow.ParameterSet","Value":"storage.NetAppCluster"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Platform type of the storage device.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Platform Type","Name":"PlatformType","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StoragePlatformType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"StorageVirtualMachineName can be between 1 and 47 characters long depending on the device target selected it may vary and with first character being alphanumeric or underscore (_) and containing alphanumeric characters and \".\", \"-\" or \"_\" allowed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine","Name":"StorageVirtualMachineName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":47,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9A-z_][-A-z0-9._]*"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppStorageVms?$orderby=Name&$select=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Task to remove a storage virtual machine with a storage virtual machine name as the input. On successful execution, the name of the storage virtual machine is generated as the output.","Label":"Remove Storage Virtual Machine","Name":"RemoveStorageVirtualMachine","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage vendor virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"PlatformType":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Virtual Machine","Name":"StorageVendorVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine Name","Name":"StorageVirtualMachineName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":47,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9A-z_][-A-z0-9._]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Storage"},{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Create a Storage Virtual Machine with Storage Virtual Machine name and list of protocols to be enabled as inputs. Optional parameters for the Management interface include Interface name, Interface IP address, Interface Netmask, Broadcast Domain, location Node name as the inputs. On successful execution Storage Virtual Machine name,  Storage Virtual Machine Root Volume name, Management IP address, Protocols enabled are generated as outputs.","Label":"New Storage Virtual Machine","Name":"NewStorageVirtualMachine","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"StorageVirtualMachineName can be between 1 and 47 characters long depending on the device target selected it may vary, and with first character being alphanumeric or underscore (_) and containing alphanumeric characters and \".\", \"-\" or \"_\" allowed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine","Name":"StorageVirtualMachineName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":47,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9A-z_][-A-z0-9._]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage vendor virtual machine options.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"PlatformType":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Virtual Machine Options","Name":"StorageVendorVirtualMachineOptions","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineOptionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine","Name":"StorageVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine Name Root Volume","Name":"StorageVirtualMachineNameRootVolume","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":52,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9A-z_][-A-z0-9._]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Management Interface IP Address","Name":"ManagementInterfaceIpAddress","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":52,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9A-z_][-A-z0-9._]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[{"Label":"NFS","ObjectType":"workflow.EnumEntry","Value":"nfs"},{"Label":"iSCSI","ObjectType":"workflow.EnumEntry","Value":"iscsi"},{"Label":"FCP","ObjectType":"workflow.EnumEntry","Value":"fcp"},{"Label":"CIFS","ObjectType":"workflow.EnumEntry","Value":"cifs"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of VM protocols.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage VM Protocols","Max":500,"Min":1,"Name":"StorageVmProtocols","ObjectType":"workflow.ArrayDataType"}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[{"CatalogMoid":"shared","Description":"Remove storage virtual machine.","InputParameters":{"StorageDevice":"${task.input.StorageDevice}","StorageVendorVirtualMachineName":"${task.output.StorageVirtualMachineName}"},"Name":"RemoveStorageVirtualMachine","ObjectType":"workflow.RollbackTask","Version":1}],"SecurePropAccess":true,"SharedScope":"shared","Tags":[{"Key":"category","Value":"Storage"},{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Create a storage NAS data interface with interface name, interface IP address, interface netmask, ipspace name, storage virtual machine name and location properties as the inputs. On successful execution interface name, interface IP address, interface netmask are generated as outputs.","Label":"New NetApp NAS Data Interface","Name":"NewNetAppNasDataInterface","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage vendor virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"PlatformType":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Virtual Machine","Name":"StorageVendorVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Interface name can be between 1 and 254 characters long.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface Name","Name":"InterfaceName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"NetApp IP interface options.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NetApp IP Interface Options","Name":"NetAppIpInterfaceOptions","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppIpInterfaceLocationOptionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"IP address for the interface (e.g. 192.168.17.2).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface IP Address","Name":"InterfaceIpAddress","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Netmask for the interface (e.g. 255.255.240.0).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface Netmask","Name":"InterfaceNetmask","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4SubnetMaskType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Specify whether a data LIF is automatically reverted to its home node under certain circumstances. These circumstances include startup, when the status of the management database changes to either master or secondary, or when the network connection is made.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Enable Auto Revert","Name":"EnableAutoRevert","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Specify the failover policy for the interface. With the System Defined failover policy, the system determines appropriate failover targets for the interface. The default behavior is that failover targets are chosen from the interface's current hosting node and also from one other non-parter node when possible. With the Local Only failover policy, the interface fails over to a port on the local or home node of the interface. With the SFO Partner Only failover policy, the interface fails over to a port on the home node or SFO partner only. With the Broadcast Domain Wide failover policy, the interface fails over to a port in the same broadcast domain as the home port. With the Disabled failover policy, failover is disabled for the interface.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Failover Policy","Name":"FailoverPolicy","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Disabled","ObjectType":"workflow.EnumEntry","Value":"home_port_only"},{"Label":"System Defined","ObjectType":"workflow.EnumEntry","Value":"default"},{"Label":"Local Only","ObjectType":"workflow.EnumEntry","Value":"home_node_only"},{"Label":"SFO Partner Only","ObjectType":"workflow.EnumEntry","Value":"sfo_partners_only"},{"Label":"Broadcast Domain Wide","ObjectType":"workflow.EnumEntry","Value":"broadcast_domain_only"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface Name","Name":"InterfaceName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface IP Address","Name":"InterfaceIpAddress","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface Netmask","Name":"InterfaceNetmask","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4SubnetMaskType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Storage"},{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.WorkflowDefinition","DefaultVersion":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Select Storage Cluster","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"FlexPodXCS Storage Cluster","Name":"storagedevice","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["Name","Model","ManagementAddress"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/storage/NetAppClusters","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage vendor virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"StorageVirtualMachineName":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Virtual Machine","Name":"StorageVendorVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Interface name can be between 1 and 254 characters long.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface Name Node1","Name":"InterfaceNameNode1","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"NetApp IP interface options.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NetApp IP Interface Options Node1","Name":"NetAppIpInterfaceOptionsNode1","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppIpInterfaceLocationOptionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"IP address for the interface (e.g. 192.168.17.2).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface IP Address Node1","Name":"InterfaceIpAddressNode1","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Netmask for the interface (e.g. 255.255.240.0).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface Netmask Node1","Name":"InterfaceNetmaskNode1","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4SubnetMaskType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Interface name can be between 1 and 254 characters long.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface Name Node2","Name":"InterfaceNameNode2","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"NetApp IP interface options.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NetApp IP Interface Options Node2","Name":"NetAppIpInterfaceOptionsNode2","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppIpInterfaceLocationOptionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"IP address for the interface (e.g. 192.168.17.2).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface IP Address Node2","Name":"InterfaceIpAddressNode2","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Netmask for the interface (e.g. 255.255.240.0).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface Netmask Node2","Name":"InterfaceNetmaskNode2","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4SubnetMaskType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"FlexPod XCS Instance","Name":"flexpodxcsinstance","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name","DeploymentType"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/convergedinfra/Pods","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}]}],"InputParameterSet":[],"Label":"FlexPod XCS NAS Interface - Create","Name":"FlexPodXCSNASInterface-Create","ObjectType":"workflow.WorkflowDefinition","OutputDefinition":[],"Properties":{"EnableDebug":true,"ExternalMeta":true,"ObjectType":"workflow.WorkflowProperties","RollbackOnFailure":true,"SupportStatus":"Supported"},"SharedScope":"user","Tasks":[{"Name":"StartTask","NextTask":"NewNetAppNasDataInterface1","ObjectType":"workflow.StartTask"},{"Name":"FailureEndTask","ObjectType":"workflow.FailureEndTask"},{"Name":"SuccessEndTask","ObjectType":"workflow.SuccessEndTask"},{"CatalogMoid":"shared","Description":"Create a storage NAS data interface with interface name, interface IP address, interface netmask, ipspace name, storage virtual machine name and location properties as the inputs. On successful execution interface name, interface IP address, interface netmask are generated as outputs.","InputParameters":{"EnableAutoRevert":true,"FailoverPolicy":"default","InterfaceIpAddress":"${workflow.input.InterfaceIpAddressNode1}","InterfaceName":"${workflow.input.InterfaceNameNode1}","InterfaceNetmask":"${workflow.input.InterfaceNetmaskNode1}","NetAppIpInterfaceOptions":"${workflow.input.NetAppIpInterfaceOptionsNode1}","StorageDevice":"${workflow.input.storagedevice}","StorageVendorVirtualMachineName":"${workflow.input.StorageVendorVirtualMachineName}"},"Label":"NetApp NFS Interface Host - 1","Name":"NewNetAppNasDataInterface1","ObjectType":"workflow.WorkerTask","OnSuccess":"NewNetAppNasDataInterface2","TaskDefinitionName":"NewNetAppNasDataInterface","Version":1},{"CatalogMoid":"shared","Description":"Create a storage NAS data interface with interface name, interface IP address, interface netmask, ipspace name, storage virtual machine name and location properties as the inputs. On successful execution interface name, interface IP address, interface netmask are generated as outputs.","InputParameters":{"EnableAutoRevert":true,"FailoverPolicy":"default","InterfaceIpAddress":"${workflow.input.InterfaceIpAddressNode2}","InterfaceName":"${workflow.input.InterfaceNameNode2}","InterfaceNetmask":"${workflow.input.InterfaceNetmaskNode2}","NetAppIpInterfaceOptions":"${workflow.input.NetAppIpInterfaceOptionsNode2}","StorageDevice":"${workflow.input.storagedevice}","StorageVendorVirtualMachineName":"${workflow.input.StorageVendorVirtualMachineName}"},"Label":"NetApp NFS Interface Host - 2","Name":"NewNetAppNasDataInterface2","ObjectType":"workflow.WorkerTask","OnSuccess":"SuccessEndTask","TaskDefinitionName":"NewNetAppNasDataInterface","Version":1}],"UiInputFilters":[{"Filters":["(Tags/any(t:t/Key eq 'cisco.meta.solution.flexpod'"],"Name":"storagedevice","ObjectType":"workflow.UiInputFilter"}],"UiRenderingData":{"Positions":[{"Name":"StartTask","X":263.5,"Y":40},{"Name":"SuccessEndTask","X":178.5,"Y":374},{"Name":"FailureEndTask","X":340.5,"Y":371},{"Name":"NewNetAppNasDataInterface1","X":178.5,"Y":117},{"Name":"NewNetAppNasDataInterface2","X":178.5,"Y":216}]},"VariableDefinition":[],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/WorkflowDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"New NetApp export policy.","Label":"New NetApp Export Policy","Name":"NetAppNewExportPolicyType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The NFS access granted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NFS Access","Name":"NfsAccess","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Read-Only","ObjectType":"workflow.EnumEntry","Value":"ro"},{"Label":"Read/Write","ObjectType":"workflow.EnumEntry","Value":"rw"},{"Label":"None","ObjectType":"workflow.EnumEntry","Value":"none"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Match string specifying the client or clients to grant access to in the export policy rule.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Client Match","Name":"ClientMatch","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"NAS Volume Access Permissions.","Label":"NetApp NAS Volume Access Permissions","Name":"NetAppNasVolumeAccessPermissionsType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"ExportViaNfs","EnableParameters":["NewExportPolicy","ExportPolicyId"],"Name":"show-exportpolicy","ObjectType":"workflow.ParameterSet","Value":"true"},{"Condition":"eq","ControlParameter":"ShareViaSmbCifs","EnableParameters":["UserOrGroup","CifsAccess"],"Name":"show-accesscontrols","ObjectType":"workflow.ParameterSet","Value":"true"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"If set to true, export via NFS. Either create a new export policy by providing the nfs access and client match or select an existing export policy.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export via NFS","Name":"ExportViaNfs","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Nfs access and client match for creating a new export policy.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"New Export Policy","Name":"NewExportPolicy","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppNewExportPolicyType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Export policy id of an existing export policy.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Existing Export Policy","Name":"ExportPolicyId","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","PolicyId"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppExportPolicies?$orderby=Name&$expand=Tenant($select=Name)","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"PolicyId"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"If true, share via SMB-CIFS.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Share via SMB-CIFS","Name":"ShareViaSmbCifs","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The user or group that will be granted access.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"User or Group","Name":"UserOrGroup","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"The level of access granted to the user or group.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"CIFS Access","Name":"CifsAccess","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"Change","ObjectType":"workflow.EnumEntry","Value":"change"},{"Label":"Full Control","ObjectType":"workflow.EnumEntry","Value":"full_control"},{"Label":"No Access","ObjectType":"workflow.EnumEntry","Value":"no_access"},{"Label":"Read","ObjectType":"workflow.EnumEntry","Value":"read"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Volume name.","Label":"Storage Volume","Name":"StorageVolumeNameType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume name","Name":"VolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^[a-zA-Z0-9]+([_a-zA-Z0-9-]*[a-zA-Z0-9])*$"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(((IndexMotypes eq storage.BaseVolume) and ( ObjectType ne storage.NetAppLun)) or (IndexMotypes eq storage.BaseStorageContainer) )&$orderby=Name&$select=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"Storage vendor volume delete options.","Label":"Storage Vendor Volume Delete Options","Name":"StorageVendorVolumeDeleteOptionsType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[{"Condition":"eq","ControlParameter":"PlatformType","EnableParameters":["ForceDelete"],"Name":"show-hitachi","ObjectType":"workflow.ParameterSet","Value":"storage.HitachiArray"}],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Platform type of the storage device.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Platform Type","Name":"PlatformType","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StoragePlatformType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Forcibly deletes the DP volume for which the capacity saving function (compression or deduplication) is enabled.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Force Delete","Name":"ForceDelete","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Remove Smart Volume with Volume name as input. On successful execution, the deleted Volume name is generated as output.","Label":"Remove NetApp NAS Smart Volume","Name":"RemoveNetAppNasSmartVolume","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage vendor virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"PlatformType":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Virtual Machine","Name":"StorageVendorVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Volume name must be between 1 and 63 alpha-numeric characters, and depending on the device target selected the limit may vary. The first and last character must be alphanumeric and name may also contain hyphen (-) character.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume","Name":"VolumeName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVolumeNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage vendor volume delete options.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"PlatformType":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Volume Delete Options","Name":"StorageVendorVolumeDeleteOptions","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVolumeDeleteOptionsType","ObjectType":"workflow.CustomDataProperty"}}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume","Name":"VolumeName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVolumeNameType","ObjectType":"workflow.CustomDataProperty"}}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Storage"},{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Create a NetApp NAS volume with volume name, storage virtual machine name, volume size, performance service level, and export policy or access controls as the inputs. On successful execution, the volume name, volume capacity, volume uuid, and export policy id are generated as outputs.","Label":"New NetApp NAS Smart Volume","Name":"NewNetAppNasSmartVolume","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage Vendor Virtual Machine Name","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"PlatformType":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Virtual Machine","Name":"StorageVendorVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Volume name can be between 1 and 197 characters long. The name should begin with a letter and only \"a\" to \"z\", \"A\" to \"Z\", \"0\" to \"9\", and underscore (_) are allowed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Name","Name":"VolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":197,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[A-z][_A-z0-9]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Volume size and unit.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Capacity","Name":"VolumeCapacity","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageCapacityType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Performance service levels represent the performance expectations of the clients or applications using the storage system. The selection of a performance service level indicates the location of the new storage in the cluster and the QoS policy assigned to the storage. Value is used for applications for which throughput and capacity are more important than latency. Performance is used for applications with modest performance needs and latency. Extreme is used for applications that expect the lowest latency and highest performance.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Performance Service Level","Name":"PerformanceServiceLevel","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"None","ObjectType":"workflow.EnumEntry","Value":"none"},{"Label":"Performance","ObjectType":"workflow.EnumEntry","Value":"performance"},{"Label":"Value","ObjectType":"workflow.EnumEntry","Value":"value"},{"Label":"Extreme","ObjectType":"workflow.EnumEntry","Value":"extreme"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"NAS Volume Access Permissions","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Access Permissions","Name":"AccessPermissions","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppNasVolumeAccessPermissionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Enable local snapshot copies using the default policy.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Enable Local Snapshot Copies","Name":"LocalSnapshotCopies","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"boolean"}}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Name","Name":"VolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Capacity","Name":"VolumeCapacity","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageCapacityType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Uuid","Name":"VolumeUuid","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Id","Name":"ExportPolicyId","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Name","Name":"ExportPolicyName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[{"CatalogMoid":"shared","Description":"Remove Smart Volume.","InputParameters":{"StorageDevice":"${task.input.StorageDevice}","StorageVendorVirtualMachineName":"${task.input.StorageVendorVirtualMachineName}","VolumeName":"${task.output.VolumeName}"},"Name":"RemoveNetAppNasSmartVolume","ObjectType":"workflow.RollbackTask","Version":1}],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Storage"},{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Add an export policy to a volume with storage virtual machine name, volume name, export policy name as the inputs. On successful execution volume name and export policy added are generated as outputs.","Label":"Add Storage Export Policy to Volume","Name":"AddStorageExportPolicyToVolume","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage vendor virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"PlatformType":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Virtual Machine","Name":"StorageVendorVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"VolumeName can be between 1 and 254 characters long depending on the device target selected it may vary, name should start with an alphabetic letter (A through Z or a through z). The remaining characters should be A through Z, a through z, 0 through 9, or special characters \"_\".","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume","Name":"VolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[A-z][_A-z0-9]*"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppVolumes?$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"ExportPolicyName can be between 1 and 254 characters long depending on the device target selected it may vary.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy","Name":"ExportPolicyName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppExportPolicies?$apply=groupby((Name),aggregate($count as count))&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume","Name":"VolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[A-z][_A-z0-9]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy","Name":"ExportPolicyName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"RetryCount":5,"RetryDelay":30,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Storage"},{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"NetApp export policy name.","Label":"NetApp Export Policy Name","Name":"NetAppExportPolicyNameType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"ExportPolicyName can be between 1 and 254 characters long depending on the device target selected it may vary.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Name","Name":"ExportPolicyName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppExportPolicies?$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"NetApp export policy protocols.","Label":"NetApp Export Policy Protocols","Name":"NetAppExportPolicyProtocolsType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[{"Label":"any","ObjectType":"workflow.EnumEntry","Value":"any"},{"Label":"nfs3","ObjectType":"workflow.EnumEntry","Value":"nfs3"},{"Label":"nfs4","ObjectType":"workflow.EnumEntry","Value":"nfs4"},{"Label":"nfs","ObjectType":"workflow.EnumEntry","Value":"nfs"},{"Label":"flexcache","ObjectType":"workflow.EnumEntry","Value":"flexcache"},{"Label":"cifs","ObjectType":"workflow.EnumEntry","Value":"cifs"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of protocols for which you want to apply the export rule.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Protocols","Max":6,"Min":1,"Name":"ExportPolicyProtocols","ObjectType":"workflow.ArrayDataType"}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","CompositeType":true,"Description":"NetApp export policy rule options.","Label":"NetApp Export Policy Rule Type","Name":"NetAppExportPolicyRuleType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Specifies the authentication type for access to volumes that use the export rule.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NetApp Export Policy Rules","Name":"Authentication","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"sys","ObjectType":"workflow.EnumEntry","Value":"sys"},{"Label":"krb5","ObjectType":"workflow.EnumEntry","Value":"krb5"},{"Label":"krb5i","ObjectType":"workflow.EnumEntry","Value":"krb5i"},{"Label":"krb5p","ObjectType":"workflow.EnumEntry","Value":"krb5p"},{"Label":"ntlm","ObjectType":"workflow.EnumEntry","Value":"ntlm"},{"Label":"any","ObjectType":"workflow.EnumEntry","Value":"any"},{"Label":"none","ObjectType":"workflow.EnumEntry","Value":"none"},{"Label":"never","ObjectType":"workflow.EnumEntry","Value":"never"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Remove a storage export policy rule with export policy name and storage virtual machine name as the inputs. On successful execution, the name of the updated export policy is generated as output.","Label":"Remove Storage Export Policy Rule","Name":"RemoveStorageExportPolicyRule","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage vendor virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"PlatformType":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Virtual Machine","Name":"StorageVendorVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"ExportPolicyName can be between 1 and 254 characters long depending on the device target selected it may vary.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Name","Name":"ExportPolicyName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppExportPolicyNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Rule Index","Name":"RuleIndex","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":16384,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy","Name":"ExportPolicyName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Storage"},{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Task to create a storage export policy rule with storage virtual machine name, export policy name, client match list, a list of read only export policy rules, a list of read write export policy rules, superuser security type and list of protocols as the inputs. On successful execution, the name of the export policy is generated as the output.","Label":"New Storage Export Policy Rule","Name":"NewStorageExportPolicyRule","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage vendor virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"PlatformType":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Virtual Machine","Name":"StorageVendorVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"ExportPolicyName can be between 1 and 254 characters long depending on the device target selected it may vary.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Name","Name":"ExportPolicyName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppExportPolicyNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of the match strings specifying the client or clients to which the export rule applies.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Client Match List","Max":500,"Min":1,"Name":"ClientMatchList","ObjectType":"workflow.ArrayDataType","Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of protocols for which you want to apply the export rule.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Protocols","Name":"ExportPolicyProtocols","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppExportPolicyProtocolsType","ObjectType":"workflow.CustomDataProperty"}},{"ArrayItemType":{"ObjectType":"workflow.CustomArrayItem","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppExportPolicyRuleType","ObjectType":"workflow.CustomDataProperty"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of Read Only export policy rules. This specifies the security type for read-only access to volumes that use the export rule.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Read Only Policy Rules","Max":8,"Min":1,"Name":"ReadOnlyPolicyRules","ObjectType":"workflow.ArrayDataType","Required":true},{"ArrayItemType":{"ObjectType":"workflow.CustomArrayItem","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppExportPolicyRuleType","ObjectType":"workflow.CustomDataProperty"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of Read Write export policy rules. This specifies the security type for read-write access to volumes that use the export rule.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Read Write Policy Rules","Max":8,"Min":1,"Name":"ReadWritePolicyRules","ObjectType":"workflow.ArrayDataType","Required":true},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[{"Label":"sys","ObjectType":"workflow.EnumEntry","Value":"sys"},{"Label":"krb5","ObjectType":"workflow.EnumEntry","Value":"krb5"},{"Label":"krb5i","ObjectType":"workflow.EnumEntry","Value":"krb5i"},{"Label":"krb5p","ObjectType":"workflow.EnumEntry","Value":"krb5p"},{"Label":"ntlm","ObjectType":"workflow.EnumEntry","Value":"ntlm"},{"Label":"any","ObjectType":"workflow.EnumEntry","Value":"any"},{"Label":"none","ObjectType":"workflow.EnumEntry","Value":"none"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Specifies a security type for superuser access to files.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Superuser Security Type","Max":7,"Min":1,"Name":"SuperuserSecurityType","ObjectType":"workflow.ArrayDataType"}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Name","Name":"ExportPolicyName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Rule Index","Name":"RuleIndex","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":16384,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"},"Required":true}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[{"CatalogMoid":"shared","Description":"Remove storage export policy rule.","InputParameters":{"ExportPolicyName":"${task.input.ExportPolicyName}","RuleIndex":"${task.output.RuleIndex}","StorageDevice":"${task.input.StorageDevice}","StorageVendorVirtualMachineName":"${task.input.StorageVendorVirtualMachineName}"},"Name":"RemoveStorageExportPolicyRule","ObjectType":"workflow.RollbackTask","Version":1}],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Storage"},{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Hypervisor Host.","Label":"ESXi Host","Name":"HypervisorHostType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":255,"Min":1,"ObjectType":"workflow.Constraints","Regex":"^(([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]).([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\\\\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:)|[a-zA-Z0-9]+([a-zA-Z0-9-._]*[a-zA-Z0-9]))$"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseHost)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.CustomDataTypeDefinition","Description":"Type definition for a Datastore.","Label":"Datastore","Name":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataTypeDefinition","ParameterSet":[],"Properties":{"ObjectType":"workflow.CustomDataTypeProperties"},"SharedScope":"shared","TypeDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name","InventoryPath"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/search/SearchItems?$filter=(IndexMotypes eq virtualization.BaseDatastore)&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"InventoryPath"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/CustomDataTypeDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Remove datastore from selected hypervisor. Requires datacenter, cluster (or host), datastore as inputs. On successful execution, the datastore name, NaaId of the deleted datastore, and the LUN number are generated as outputs.","Label":"Remove Hypervisor Datastore","Name":"RemoveHypervisorDatastore","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore is hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore is hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the datastore to be removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Disk associated with the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk name","Name":"NAAId","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"LUN number of the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Number","Name":"LUNNumber","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Beta","Timeout":150,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Virtualization"},{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":2},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Create a new datastore on selected hypervisor. Requires datacenter, cluster (or host), and datastore. For VMFS, the canonical disk name, and VMFS version inputs are needed. For NFS, remote server and mount path, and NFS version are needed. On successful execution, the datastore name, disk name, VMFS version, and datacenter name are generated as outputs.","Label":"New Hypervisor Datastore","Name":"NewHypervisorDatastore","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore will be hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name for the new datastore, limited to 42 characters.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints","Regex":"^.{1,42}$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type and version of the new datastore. Minimum datastore size: VMFS 5 - 1.3GB, VMFS 6 - 2GB. Kerberos support is enabled in NFS4.1 only.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Type of Datastore","Name":"DatastoreVersion","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreVersionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the newly created datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type of the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"VMFS Version","Name":"VMFSVersion","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type of the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore Type","Name":"DatastoreType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore will be hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Disk identity of the newly created datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk","Name":"Disk","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":300,"TimeoutPolicy":"Retry"},"RollbackTasks":[{"CatalogMoid":"shared","Description":"Remove Hypervisor Datastore ","InputParameters":{"Cluster":"${task.input.Cluster}","Datacenter":"${task.input.Datacenter}","Datastore":"${task.input.Datastore}","Host":"${task.input.Host}","Vcenter":"${task.input.Vcenter}"},"Name":"RemoveHypervisorDatastore","ObjectType":"workflow.RollbackTask","Version":2}],"SharedScope":"shared","Tags":[{"Key":"category","Value":"Virtualization"},{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.WorkflowDefinition","DefaultVersion":true,"Description":"Provision New NFS Datastore on FlexPodXCS instance - Begin with new SVM and end with hypervisor cluster mounting","InputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Select FlexPod XCS Instance","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"FlexPodXCS Instance","Name":"flexpodxcsinstance","ObjectType":"workflow.MoReferenceDataType","Properties":[{"DisplayAttributes":["Name","DeploymentType"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/convergedinfra/Pods","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Select Storage Cluster","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"FlexPodXCS Storage Cluster","Name":"storagedevice","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["Name","Model","ManagementAddress"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/storage/NetAppClusters","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"SVM Name","Name":"svmname","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":47,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9A-z_][-A-z0-9._]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue","Value":{"NetAppVirtualMachineOptions":{"ManageAdministratorAccount":false,"StorageVmProtocols":["nfs"]},"PlatformType":"storage.NetAppCluster"}},"Description":"Provide SVM Protocol Service Type","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"SVM Protocol","Name":"svmprotocol","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineOptionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Interface name can be between 1 and 254 characters long.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface Name Node1","Name":"InterfaceNameNode1","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"NetApp IP interface options.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NetApp IP Interface Options Node1","Name":"NetAppIpInterfaceOptionsNode1","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppIpInterfaceLocationOptionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"IP address for the interface (e.g. 192.168.17.2).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface IP Address Node1","Name":"InterfaceIpAddressNode1","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Netmask for the interface (e.g. 255.255.240.0).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface Netmask Node1","Name":"InterfaceNetmaskNode1","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4SubnetMaskType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Interface name can be between 1 and 254 characters long.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface Name Node2","Name":"InterfaceNameNode2","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"NetApp IP interface options.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NetApp IP Interface Options Node2","Name":"NetAppIpInterfaceOptionsNode2","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppIpInterfaceLocationOptionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"IP address for the interface (e.g. 192.168.17.2).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface IP Address Node2","Name":"InterfaceIpAddressNode2","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4AddressType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Netmask for the interface (e.g. 255.255.240.0).","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Interface Netmask Node2","Name":"InterfaceNetmaskNode2","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"IpV4SubnetMaskType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Volume name can be between 1 and 197 characters long. The name should begin with a letter and only \"a\" to \"z\", \"A\" to \"Z\", \"0\" to \"9\", and underscore (_) are allowed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"NAS Volume Name","Name":"NASVolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":197,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[A-z][_A-z0-9]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Volume size and unit.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume Capacity","Name":"VolumeCapacity","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageCapacityType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Performance service levels represent the performance expectations of the clients or applications using the storage system. The selection of a performance service level indicates the location of the new storage in the cluster and the QoS policy assigned to the storage. Value is used for applications for which throughput and capacity are more important than latency. Performance is used for applications with modest performance needs and latency. Extreme is used for applications that expect the lowest latency and highest performance.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Performance Service Level","Name":"PerformanceServiceLevel","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[{"Label":"None","ObjectType":"workflow.EnumEntry","Value":"none"},{"Label":"Performance","ObjectType":"workflow.EnumEntry","Value":"performance"},{"Label":"Value","ObjectType":"workflow.EnumEntry","Value":"value"},{"Label":"Extreme","ObjectType":"workflow.EnumEntry","Value":"extreme"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"},"Required":true},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of the match strings specifying the client or clients to which the export rule applies.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Client Match List","Max":500,"Min":1,"Name":"ClientMatchList","ObjectType":"workflow.ArrayDataType"},{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type and version of the new datastore. Minimum datastore size: VMFS 5 - 1.3GB, VMFS 6 - 2GB. Kerberos support is enabled in NFS4.1 only.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Type of Datastore","Name":"DatastoreVersion","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreVersionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"InputParameterSet":[],"Label":"FlexPod XCS New NAS DataStore - Create","Name":"FlexPodXCSNewNASDataStore-Create","ObjectType":"workflow.WorkflowDefinition","OutputDefinition":[],"Properties":{"EnableDebug":true,"ExternalMeta":true,"ObjectType":"workflow.WorkflowProperties","RollbackOnFailure":true,"SupportStatus":"Supported"},"SharedScope":"user","Tasks":[{"Name":"StartTask","NextTask":"NewStorageVirtualMachine1","ObjectType":"workflow.StartTask"},{"CatalogMoid":"shared","Description":"Create a Storage Virtual Machine with Storage Virtual Machine name and list of protocols to be enabled as inputs. Optional parameters for the Management interface include Interface name, Interface IP address, Interface Netmask, Broadcast Domain, location Node name as the inputs. On successful execution Storage Virtual Machine name,  Storage Virtual Machine Root Volume name, Management IP address, Protocols enabled are generated as outputs.","InputParameters":{"StorageDevice":"${workflow.input.storagedevice}","StorageVendorVirtualMachineOptions":"${workflow.input.svmprotocol}","StorageVirtualMachineName":"${workflow.input.svmname}"},"Label":"New Storage Virtual Machine","Name":"NewStorageVirtualMachine1","ObjectType":"workflow.WorkerTask","OnSuccess":"FlexPodXCSNASInterfaceCreate1","TaskDefinitionName":"NewStorageVirtualMachine","Version":1},{"CatalogMoid":"user","InputParameters":{"InterfaceIpAddressNode1":"${workflow.input.InterfaceIpAddressNode1}","InterfaceIpAddressNode2":"${workflow.input.InterfaceIpAddressNode2}","InterfaceNameNode1":"${workflow.input.InterfaceNameNode1}","InterfaceNameNode2":"${workflow.input.InterfaceNameNode2}","InterfaceNetmaskNode1":"${workflow.input.InterfaceNetmaskNode1}","InterfaceNetmaskNode2":"${workflow.input.InterfaceNetmaskNode2}","NetAppIpInterfaceOptionsNode1":"${workflow.input.NetAppIpInterfaceOptionsNode1}","NetAppIpInterfaceOptionsNode2":"${workflow.input.NetAppIpInterfaceOptionsNode2}","StorageVendorVirtualMachineName":"${NewStorageVirtualMachine1.output.StorageVirtualMachineName}","flexpodxcsinstance":"${workflow.input.flexpodxcsinstance}","storagedevice":"${workflow.input.storagedevice}"},"Label":"FlexPodXCS NAS IntrFac-Create","Name":"FlexPodXCSNASInterfaceCreate1","ObjectType":"workflow.SubWorkflowTask","OnSuccess":"NewNetAppNasSmartVolume1","Version":1,"WorkflowDefinitionName":"FlexPodXCSNASInterface-Create"},{"Name":"SuccessEndTask","ObjectType":"workflow.SuccessEndTask"},{"Name":"FailureEndTask","ObjectType":"workflow.FailureEndTask"},{"CatalogMoid":"shared","Description":"Create a NetApp NAS volume with volume name, storage virtual machine name, volume size, performance service level, and export policy or access controls as the inputs. On successful execution, the volume name, volume capacity, volume uuid, and export policy id are generated as outputs.","InputParameters":{"AccessPermissions":{"ExportViaNfs":true,"NewExportPolicy":{"NfsAccess":"rw"},"ShareViaSmbCifs":false},"LocalSnapshotCopies":true,"PerformanceServiceLevel":"${workflow.input.PerformanceServiceLevel}","StorageDevice":"${workflow.input.storagedevice}","StorageVendorVirtualMachineName":"${NewStorageVirtualMachine1.output.StorageVirtualMachineName}","VolumeCapacity":"${workflow.input.VolumeCapacity}","VolumeName":"${workflow.input.NASVolumeName}"},"Label":"New NetApp NAS Smart Volume","Name":"NewNetAppNasSmartVolume1","ObjectType":"workflow.WorkerTask","OnSuccess":"AddStorageExportPolicyToVolume1","TaskDefinitionName":"NewNetAppNasSmartVolume","Version":1},{"CatalogMoid":"shared","Description":"Add an export policy to a volume with storage virtual machine name, volume name, export policy name as the inputs. On successful execution volume name and export policy added are generated as outputs.","InputParameters":{"ExportPolicyName":"${workflow.variable.ExportPolicyName}","StorageDevice":"${workflow.input.storagedevice}","StorageVendorVirtualMachineName":"${NewStorageVirtualMachine1.output.StorageVirtualMachineName}","VolumeName":"${NewNetAppNasSmartVolume1.output.VolumeName}"},"Label":"Add Storage Export Policy to Volume","Name":"AddStorageExportPolicyToVolume1","ObjectType":"workflow.WorkerTask","OnSuccess":"NewStorageExportPolicyRule1","TaskDefinitionName":"AddStorageExportPolicyToVolume","Version":1},{"CatalogMoid":"shared","Description":"Task to create a storage export policy rule with storage virtual machine name, export policy name, client match list, a list of read only export policy rules, a list of read write export policy rules, superuser security type and list of protocols as the inputs. On successful execution, the name of the export policy is generated as the output.","InputParameters":{"ClientMatchList":"${workflow.input.ClientMatchList}","ExportPolicyName":"${workflow.variable.ExportPolicyName}","ExportPolicyProtocols":["nfs"],"ReadOnlyPolicyRules":[{"Authentication":"sys"}],"ReadWritePolicyRules":[{"Authentication":"sys"}],"StorageDevice":"${workflow.input.storagedevice}","StorageVendorVirtualMachineName":"${NewStorageVirtualMachine1.output.StorageVirtualMachineName}","SuperuserSecurityType":["sys"]},"Label":"New Storage Export Policy Rule","Name":"NewStorageExportPolicyRule1","ObjectType":"workflow.WorkerTask","OnSuccess":"NewHypervisorDatastore1","TaskDefinitionName":"NewStorageExportPolicyRule","Version":1},{"CatalogMoid":"shared","Description":"Create a new datastore on selected hypervisor. Requires datacenter, cluster (or host), and datastore. For VMFS, the canonical disk name, and VMFS version inputs are needed. For NFS, remote server and mount path, and NFS version are needed. On successful execution, the datastore name, disk name, VMFS version, and datacenter name are generated as outputs.","InputParameters":{"Cluster":"${workflow.input.Cluster}","Datacenter":"${workflow.input.Datacenter}","Datastore":"${NewNetAppNasSmartVolume1.output.VolumeName}","DatastoreVersion":"${workflow.input.DatastoreVersion}","Vcenter":"${workflow.input.Vcenter}"},"Label":"New Hypervisor Datastore","Name":"NewHypervisorDatastore1","ObjectType":"workflow.WorkerTask","OnSuccess":"SuccessEndTask","TaskDefinitionName":"NewHypervisorDatastore","Version":1}],"UiInputFilters":[{"Filters":["(Tags/any(t:t/Key eq 'cisco.meta.solution.flexpod' and t/Value eq '${flexpodxcsinstance.ServiceItemInstance.Moid}'))"],"Name":"storagedevice","ObjectType":"workflow.UiInputFilter"}],"UiRenderingData":{"Positions":[{"Name":"StartTask","X":263,"Y":35},{"Name":"SuccessEndTask","X":263,"Y":634},{"Name":"FailureEndTask","X":405,"Y":634},{"Name":"NewStorageVirtualMachine1","X":178,"Y":106},{"Name":"FlexPodXCSNASInterfaceCreate1","X":178,"Y":194},{"Name":"NewNetAppNasSmartVolume1","X":178,"Y":282},{"Name":"AddStorageExportPolicyToVolume1","X":178,"Y":370},{"Name":"NewStorageExportPolicyRule1","X":178,"Y":458},{"Name":"NewHypervisorDatastore1","X":178,"Y":546}]},"VariableDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue","Value":"default"},"Description":"ExportPolicyName can be between 1 and 254 characters long depending on the device target selected it may vary.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"ExportPolicyName","Name":"ExportPolicyName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/WorkflowDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.ErrorResponseHandler","Name":"NetAppApiErrorResponseHandler","ObjectType":"workflow.ErrorResponseHandler","Parameters":[{"AcceptSingleValue":true,"ComplexType":"Error","ItemType":"complex","Name":"Errors","ObjectType":"content.Parameter","Path":"$","Type":"collection"}],"PlatformType":"NetAppActiveIqUnifiedManager","SharedScope":"shared","Types":[{"Name":"Error","ObjectType":"content.ComplexType","Parameters":[{"ItemType":"simple","Name":"Msg","ObjectType":"content.Parameter","Path":"$.error.message","Type":"simple"},{"ItemType":"simple","Name":"ErrorCode","ObjectType":"content.Parameter","Path":"$.error.code","Type":"simple"}]}]},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/ErrorResponseHandlers","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"This is a task to remove a NetApp storage virtual machine.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveStorageVirtualMachine\" and Version eq 1"},"Label":"Remove NetApp Storage Virtual Machine","Name":"RemoveNetAppStorageVirtualMachine","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage vendor virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"PlatformType":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Virtual Machine","Name":"StorageVendorVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine Name","Name":"StorageVirtualMachineName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":47,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9A-z_][-A-z0-9._]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"This is a task to create a new  NetApp storage virtual machine.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewStorageVirtualMachine\" and Version eq 1"},"Label":"New NetApp Virtual Machine","Name":"NewNetAppVirtualMachine","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"StorageVirtualMachineName can be between 1 and 47 characters long depending on the device target selected it may vary, and with first character being alphanumeric or underscore (_) and containing alphanumeric characters and \".\", \"-\" or \"_\" allowed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine","Name":"StorageVirtualMachineName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":47,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9A-z_][-A-z0-9._]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage vendor virtual machine options.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"PlatformType":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Virtual Machine Options","Name":"StorageVendorVirtualMachineOptions","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineOptionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine","Name":"StorageVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Virtual Machine Name Root Volume","Name":"StorageVirtualMachineNameRootVolume","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":52,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9A-z_][-A-z0-9._]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Management Interface IP Address","Name":"ManagementInterfaceIpAddress","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":52,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[0-9A-z_][-A-z0-9._]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[{"Label":"NFS","ObjectType":"workflow.EnumEntry","Value":"nfs"},{"Label":"iSCSI","ObjectType":"workflow.EnumEntry","Value":"iscsi"},{"Label":"FCP","ObjectType":"workflow.EnumEntry","Value":"fcp"},{"Label":"CIFS","ObjectType":"workflow.EnumEntry","Value":"cifs"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of VM protocols.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage VM Protocols","Max":500,"Min":1,"Name":"StorageVmProtocols","ObjectType":"workflow.ArrayDataType"}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SecurePropAccess":true,"SharedScope":"shared","Tags":[{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetClusterUuid","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID successful.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID failed","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Uuid","ObjectType":"content.Parameter","Path":"$.Uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/storage/NetAppClusters/{{.global.task.input.StorageDevice.Moid}}?$select=Uuid"},{"Body":"{\"ip\": {\"address\": \"{{.global.task.input.InterfaceIpAddress}}\", \"netmask\": \"{{.global.task.input.InterfaceNetmask}}\"}, \"name\": \"{{.global.task.input.InterfaceName}}\", \"svm\": {\"name\": \"{{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}\"}, \"enabled\": true, \"location\": { {{if (index .global.task.input.NetAppIpInterfaceOptions \"LocationHomeNode\") }} \"home_node\": {\"name\": \"{{.global.task.input.NetAppIpInterfaceOptions.LocationHomeNode}}\"} {{end}} {{if (index .global.task.input.NetAppIpInterfaceOptions \"LocationBroadcastDomain\") }}, \"broadcast_domain\": {\"name\": \"{{.global.task.input.NetAppIpInterfaceOptions.LocationBroadcastDomain}}\"} {{end}} {{if (index .global.task.input.NetAppIpInterfaceOptions \"LocationHomePort\") }}, \"home_port\": {\"name\": \"{{.global.task.input.NetAppIpInterfaceOptions.LocationHomePort}}\"} {{end}}, \"auto_revert\": \"{{.global.task.input.EnableAutoRevert}}\" {{if .global.task.input.FailoverPolicy}}, \"failover\": \"{{.global.task.input.FailoverPolicy}}\" {{end}} }, \"service_policy\": {\"name\": \"default-data-files\"} }","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewIpInterface","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.NewIpInterface.output.HttpStatusCode 400) (le .global.NewIpInterface.output.HttpStatusCode 499)}}","Message":"{{if .global.NewIpInterface.output.Errors}}{{$err := (index .global.NewIpInterface.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewIpInterface.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.NewIpInterface.output.HttpStatusCode 500)}}","Message":"{{if .global.NewIpInterface.output.Errors}}{{$err := (index .global.NewIpInterface.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewIpInterface.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.NewIpInterface.output.HttpStatusCode 501) (le .global.NewIpInterface.output.HttpStatusCode 599)}}","Message":"{{if .global.NewIpInterface.output.Errors}}{{$err := (index .global.NewIpInterface.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewIpInterface.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.NewIpInterface.output.HttpStatusCode 201)}}","Message":"IP interface created successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"InterfaceName","ObjectType":"content.Parameter","Path":"$.records[0].name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"InterfaceUuid","ObjectType":"content.Parameter","Path":"$.records[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"InterfaceIpAddress","ObjectType":"content.Parameter","Path":"$.records[0].ip.address","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"InterfaceNetmask","ObjectType":"content.Parameter","Path":"$.records[0].ip.netmask","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/network/ip/interfaces?return_records=true"},{"Body":"{\"Type\":\"storage.NetAppDataIpInterface\",\"Queries\": [{\"Uuid\": \"{{.global.NewIpInterface.output.InterfaceUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"IP interface created successfully","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{ne .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ObjectType":"storage.NetAppCluster"}},"Description":"New NetApp NAS data interface.","ErrorResponseHandler":{"ObjectType":"workflow.ErrorResponseHandler","Selector":"Name eq \"NetAppApiErrorResponseHandler\""},"Name":"NewNetAppNasDataInterface","ObjectType":"workflow.BatchApiExecutor","Output":{"InterfaceIpAddress":"{{.global.NewIpInterface.output.InterfaceIpAddress}}","InterfaceName":"{{.global.NewIpInterface.output.InterfaceName}}","InterfaceNetmask":"{{.global.NewIpInterface.output.InterfaceNetmask}}"},"RetryFromFailedApi":true,"SharedScope":"shared","SkipOnCondition":"{{if ne .global.task.input.StorageDevice.ObjectType \"storage.NetAppCluster\"}} true {{end}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewNetAppNasDataInterface\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetClusterUuid","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID successful.","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{ne .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID failed","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Uuid","ObjectType":"content.Parameter","Path":"$.Uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/storage/NetAppClusters/{{.global.task.input.StorageDevice.Moid}}?$select=Uuid"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppVolumeDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppVolumeDetails.output.HttpStatusCode 400) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppVolumeDetails.output.HttpStatusCode 501) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ and (eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 200) (not .global.GetNetAppVolumeDetails.output.VolumeUuid) }}","Message":"No volume named '{{ .global.task.input.VolumeName}}' found.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ (eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 200) }}","Message":"Volume details retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeUuid","ObjectType":"content.Parameter","Path":"$.records[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"AggregateUuid","ObjectType":"content.Parameter","Path":"$.records[0].aggregates[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ExportPolicyId","ObjectType":"content.Parameter","Path":"$.records[0].nas.export_policy.id","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ExportPolicyName","ObjectType":"content.Parameter","Path":"$.records[0].nas.export_policy.name","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?name={{.global.task.input.VolumeName}}&svm.name={{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}&fields=aggregates,nas.export_policy"},{"Body":"{}","ContentType":"json","EndpointRequestType":"Internal","Method":"DELETE","Name":"RemoveVolume","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.RemoveVolume.output.HttpStatusCode 400) (le .global.RemoveVolume.output.HttpStatusCode 499)}}","Message":"{{if .global.RemoveVolume.output.Errors}}{{$err := (index .global.RemoveVolume.output.Errors 0)}}{{if (index $err \"\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.RemoveVolume.output.HttpStatusCode 500)}}","Message":"{{if .global.RemoveVolume.output.Errors}}{{$err := (index .global.RemoveVolume.output.Errors 0)}}{{if (index $err \"\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.RemoveVolume.output.HttpStatusCode 501) (le .global.RemoveVolume.output.HttpStatusCode 599)}}","Message":"{{if .global.RemoveVolume.output.Errors}}{{$err := (index .global.RemoveVolume.output.Errors 0)}}{{if (index $err \"\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.RemoveVolume.output.HttpStatusCode 202) }}","Message":"Job ID created successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobUuid","ObjectType":"content.Parameter","Path":"$.job.uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes/{{.global.GetNetAppVolumeDetails.output.VolumeUuid}}?return_timeout=59"},{"Body":"{}","ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetJobDetail","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 400) (le .global.GetJobDetail.output.HttpStatusCode 499)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetJobDetail.output.HttpStatusCode 500)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 501) (le .global.GetJobDetail.output.HttpStatusCode 599)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Failed\"{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"paused\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Paused\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"queued\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Queued\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"running\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Running\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"success\" }}","Message":"Volume removed successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobState","ObjectType":"content.Parameter","Path":"$.state","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"CompletedTime","ObjectType":"content.Parameter","Path":"$.end_time","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobMessage","ObjectType":"content.Parameter","Path":"$.message","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/cluster/jobs/{{.global.RemoveVolume.output.JobUuid}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppVolumeCount","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppVolumeCount.output.HttpStatusCode 400) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppVolumeDetails.output.HttpStatusCode 501) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 200) }}","Message":"Volume count retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"NumberOfRecords","ObjectType":"content.Parameter","Path":"$.num_records","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?nas.export_policy.name={{.global.GetNetAppVolumeDetails.output.ExportPolicyName}}&svm.name={{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}&return_records=false"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppExportPolicyCount","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppExportPolicyCount.output.HttpStatusCode 400) (le .global.GetNetAppExportPolicyCount.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppExportPolicyCount.output.Errors}}{{$err := (index .global.GetNetAppExportPolicyCount.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicyCount.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppExportPolicyCount.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppExportPolicyCount.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicyCount.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppExportPolicyCount.output.HttpStatusCode 501) (le .global.GetNetAppExportPolicyCount.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppExportPolicyCount.output.Errors}}{{$err := (index .global.GetNetAppExportPolicyCount.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicyCount.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppExportPolicyCount.output.HttpStatusCode 200) }}","Message":"Export policy count retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"NumberOfRecords","ObjectType":"content.Parameter","Path":"$.num_records","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/nfs/export-policies?name={{.global.GetNetAppVolumeDetails.output.ExportPolicyName}}&svm.name={{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}&return_records=false"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"DELETE","Name":"RemoveNetAppExportPolicy","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.RemoveNetAppExportPolicy.output.HttpStatusCode 400)  (le .global.RemoveNetAppExportPolicy.output.HttpStatusCode 499)}}","Message":"{{if .global.RemoveNetAppExportPolicy.output.Errors}}{{$err := (index .global.RemoveNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveNetAppExportPolicy.output.HttpStatusMsg}}{{end}} /api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/nfs/export-policies/{{Ftoi .global.GetNetAppVolumeDetails.output.ExportPolicyId}} {{.global.GetNetAppVolumeCount.output.NumberOfRecords}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.RemoveNetAppExportPolicy.output.HttpStatusCode 500)}}","Message":"{{if .global.RemoveNetAppExportPolicy.output.Errors}}{{$err := (index .global.RemoveNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.RemoveNetAppExportPolicy.output.HttpStatusCode 501)  (le .global.RemoveNetAppExportPolicy.output.HttpStatusCode 599)}}","Message":"{{if .global.RemoveNetAppExportPolicy.output.Errors}}{{$err := (index .global.RemoveNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.RemoveNetAppExportPolicy.output.HttpStatusCode 200)}}","Message":"Export Policy removed successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","SkipOnCondition":"{{if or (gt (.global.GetNetAppVolumeCount.output.NumberOfRecords|Atoi) 0) (eq (.global.GetNetAppExportPolicyCount.output.NumberOfRecords|Atoi) 0) }} true {{end}}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/nfs/export-policies/{{Ftoi .global.GetNetAppVolumeDetails.output.ExportPolicyId}}"},{"Body":"{\"Type\":\"storage.NetAppCluster\",\"Queries\": [{\"Uuid\": \"{{.global.GetClusterUuid.output.Uuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateClusterInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateClusterInventory.output.HttpStatusCode 200}}","Message":"Updated cluster after volume removal.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateClusterInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateClusterInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppAggregate\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppVolumeDetails.output.AggregateUuid}}\",  \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateAggregateInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateAggregateInventory.output.HttpStatusCode 200}}","Message":"Updated aggregate after volume removal.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateAggregateInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateAggregateInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppVolume\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppVolumeDetails.output.VolumeUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateVolumeInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"Volume removed successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateVolumeInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppExportPolicy\",\"Queries\": [{\"PolicyId\": \"{{Ftoi .global.GetNetAppVolumeDetails.output.ExportPolicyId}}\",\"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateExportPolicyInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateExportPolicyInventory.output.HttpStatusCode 200}}","Message":"Volume{{if (eq (.global.GetNetAppVolumeCount.output.NumberOfRecords|Atoi) 0) }} and export policy{{end}} removed successfully.","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{ne .global.UpdateExportPolicyInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateExportPolicyInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ObjectType":"storage.NetAppCluster"}},"Description":"Remove NetApp NAS Smart volume.","ErrorResponseHandler":{"ObjectType":"workflow.ErrorResponseHandler","Selector":"Name eq \"NetAppApiErrorResponseHandler\""},"Name":"RemoveNetAppNasSmartVolume","ObjectType":"workflow.BatchApiExecutor","Output":{"VolumeName":"{{.global.task.input.VolumeName}}"},"RetryFromFailedApi":true,"SharedScope":"shared","SkipOnCondition":"{{if ne .global.task.input.StorageDevice.ObjectType \"storage.NetAppCluster\"}} true {{end}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveNetAppNasSmartVolume\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetClusterUuid","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID successful.","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{ne .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID failed","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Uuid","ObjectType":"content.Parameter","Path":"$.Uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/storage/NetAppClusters/{{.global.task.input.StorageDevice.Moid}}?$select=Uuid"},{"Body":"{\"name\": \"{{.global.task.input.VolumeName}}\", \"smart_container\": true, \"svm\": {\"name\": \"{{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}\"}, \"nas\": { \"protection_type\": { \"local_policy\": {{if .global.task.input.LocalSnapshotCopies }} \"default\" {{else}} \"none\" {{end}} }, {{if index .global.task.input.AccessPermissions \"NewExportPolicy\" }} \"nfs_access\": [{ \"access\": {{if index .global.task.input.AccessPermissions.NewExportPolicy \"NfsAccess\"}}\"{{.global.task.input.AccessPermissions.NewExportPolicy.NfsAccess}}\",{{else}}\"rw\",{{end}} \"host\": {{if index .global.task.input.AccessPermissions.NewExportPolicy \"ClientMatch\" }}\"{{.global.task.input.AccessPermissions.NewExportPolicy.ClientMatch}}\"{{else}}\"0.0.0.0/0\"{{end}}}], {{else}} \"nfs_access\": [], {{end}} {{if index .global.task.input.AccessPermissions \"ShareViaSmbCifs\"}} \"cifs_access\": [{\"access\": \"{{.global.task.input.AccessPermissions.CifsAccess}}\", \"user_or_group\": \"{{.global.task.input.AccessPermissions.UserOrGroup}}\"}], {{else}} \"cifs_access\": [], {{end}} \"application_components\": [{\"name\": \"{{.global.task.input.VolumeName}}\", \"total_size\": \"{{.global.task.input.VolumeCapacity.VolumeSize}}{{.global.task.input.VolumeCapacity.VolumeUnit}}\", \"share_count\": 1, {{if eq .global.task.input.PerformanceServiceLevel \"none\"}} \"qos\": {\"policy\": {\"name\": \"none\"}} {{else}} \"storage_service\": {\"name\": \"{{.global.task.input.PerformanceServiceLevel}}\"} {{end}} {{if and (index .global.task.input.AccessPermissions \"ExportPolicyId\") (not (index .global.task.input.AccessPermissions \"NewExportPolicy\")) }}, \"export_policy\": {\"id\": {{Ftoi .global.task.input.AccessPermissions.ExportPolicyId}}} {{end}} }]}}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewCreateVolume","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.NewCreateVolume.output.HttpStatusCode 400) (le .global.NewCreateVolume.output.HttpStatusCode 499)}}","Message":"{{if .global.NewCreateVolume.output.Errors}}{{$err := (index .global.NewCreateVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewCreateVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.NewCreateVolume.output.HttpStatusCode 500)}}","Message":"{{if .global.NewCreateVolume.output.Errors}}{{$err := (index .global.NewCreateVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewCreateVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.NewCreateVolume.output.HttpStatusCode 501) (le .global.NewCreateVolume.output.HttpStatusCode 599)}}","Message":"{{if .global.NewCreateVolume.output.Errors}}{{$err := (index .global.NewCreateVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewCreateVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.NewCreateVolume.output.HttpStatusCode 202) }}","Message":"Job ID created successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobUuid","ObjectType":"content.Parameter","Path":"$.job.uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/application/applications?return_timeout=59"},{"Body":"{}","ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetJobDetail","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 400)  (le .global.GetJobDetail.output.HttpStatusCode 499)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetJobDetail.output.HttpStatusCode 500)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 501)  (le .global.GetJobDetail.output.HttpStatusCode 599)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Failed\"{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"paused\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Paused\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"queued\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Queued\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"running\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Running\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"success\" }}","Message":"Received Job status successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobState","ObjectType":"content.Parameter","Path":"$.state","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"CompletedTime","ObjectType":"content.Parameter","Path":"$.end_time","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobMessage","ObjectType":"content.Parameter","Path":"$.message","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/cluster/jobs/{{.global.NewCreateVolume.output.JobUuid}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppVolumeDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppVolumeDetails.output.HttpStatusCode 400) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppVolumeDetails.output.HttpStatusCode 501) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 200) }}","Message":"Created NAS Volume successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeUuid","ObjectType":"content.Parameter","Path":"$.records[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeName","ObjectType":"content.Parameter","Path":"$.records[0].name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"SvmUuid","ObjectType":"content.Parameter","Path":"$.records[0].svm.uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ExportPolicyId","ObjectType":"content.Parameter","Path":"$.records[0].nas.export_policy.id","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ExportPolicyName","ObjectType":"content.Parameter","Path":"$.records[0].nas.export_policy.name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"AggregateUuid","ObjectType":"content.Parameter","Path":"$.records[0].aggregates[0].uuid","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?name={{.global.task.input.VolumeName}}&svm.name={{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}&fields=size,nas,aggregates,svm"},{"Body":"{ \"space\": { \"snapshot\": { \"reserve_percent\": {{if .global.task.input.LocalSnapshotCopies}}5{{else}}0{{end}} } } }","ContentType":"json","EndpointRequestType":"Internal","Method":"PATCH","Name":"UpdateSnapshotReservePercent","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.UpdateSnapshotReservePercent.output.HttpStatusCode 400) (le .global.UpdateSnapshotReservePercent.output.HttpStatusCode 499)}}","Message":"{{if .global.UpdateSnapshotReservePercent.output.Errors}}{{$err := (index .global.UpdateSnapshotReservePercent.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateSnapshotReservePercent.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.UpdateSnapshotReservePercent.output.HttpStatusCode 500)}}","Message":"{{if .global.UpdateSnapshotReservePercent.output.Errors}}{{$err := (index .global.UpdateSnapshotReservePercent.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateSnapshotReservePercent.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.UpdateSnapshotReservePercent.output.HttpStatusCode 501) (le .global.UpdateSnapshotReservePercent.output.HttpStatusCode 599)}}","Message":"{{if .global.UpdateSnapshotReservePercent.output.Errors}}{{$err := (index .global.UpdateSnapshotReservePercent.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateSnapshotReservePercent.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.UpdateSnapshotReservePercent.output.HttpStatusCode 200)}}","Message":"Updated snapshot reserve percent for the Volume.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?name={{.global.task.input.VolumeName}}&svm.name={{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}"},{"Body":"{\"Type\":\"storage.NetAppExportPolicy\",\"Queries\": [{\"PolicyId\": \"{{Ftoi .global.GetNetAppVolumeDetails.output.ExportPolicyId}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateExportPolicyInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateExportPolicyInventory.output.HttpStatusCode 200}}","Message":"Export policy added successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateExportPolicyInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateExportPolicyInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppCluster\",\"Queries\": [{\"Uuid\": \"{{.global.GetClusterUuid.output.Uuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateClusterInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateClusterInventory.output.HttpStatusCode 200}}","Message":"Updated cluster after volume creation.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateClusterInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateClusterInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppAggregate\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppVolumeDetails.output.AggregateUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateAggregateInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateAggregateInventory.output.HttpStatusCode 200}}","Message":"Updated aggregate after volume creation.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateAggregateInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateAggregateInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppVolume\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppVolumeDetails.output.VolumeUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateVolumeInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"Created volume successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateVolumeInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppCifsShare\",\"Queries\": [{\"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\", \"SvmUuid\": \"{{.global.GetNetAppVolumeDetails.output.SvmUuid}}\", \"Name\": \"{{.global.GetNetAppVolumeDetails.output.VolumeName}}\" }], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateCifsShareInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateCifsShareInventory.output.HttpStatusCode 200}}","Message":"Created volume successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateCifsShareInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateCifsShareInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","SkipOnCondition":"{{if index .global.task.input.AccessPermissions \"ShareViaSmbCifs\"}} false {{else}} true {{end}}","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ObjectType":"storage.NetAppCluster"}},"Description":"Create a NetApp NAS volume with volume name, storage virtual machine name, volume size, performance service level, and export policy or access controls as the inputs. On successful execution, the volume name, volume capacity, volume uuid, and export policy id are generated as outputs.","ErrorResponseHandler":{"ObjectType":"workflow.ErrorResponseHandler","Selector":"Name eq \"NetAppApiErrorResponseHandler\""},"Name":"NewNetAppNasSmartVolume","ObjectType":"workflow.BatchApiExecutor","Output":{"ExportPolicyId":"{{Ftoi .global.GetNetAppVolumeDetails.output.ExportPolicyId}}","ExportPolicyName":"{{.global.GetNetAppVolumeDetails.output.ExportPolicyName}}","VolumeCapacity":"{{.global.task.input.VolumeCapacity| ToJson}}","VolumeName":"{{.global.GetNetAppVolumeDetails.output.VolumeName}}","VolumeUuid":"{{.global.GetNetAppVolumeDetails.output.VolumeUuid}}"},"RetryFromFailedApi":true,"SharedScope":"shared","SkipOnCondition":"{{if ne .global.task.input.StorageDevice.ObjectType \"storage.NetAppCluster\"}} true {{end}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewNetAppNasSmartVolume\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"This is a task to add an export policy to an existing NetApp volume.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"AddStorageExportPolicyToVolume\" and Version eq 1"},"Label":"Add NetApp Export Policy to Volume","Name":"AddNetAppExportPolicyToVolume","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage vendor virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"PlatformType":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Virtual Machine","Name":"StorageVendorVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"VolumeName can be between 1 and 254 characters long depending on the device target selected it may vary, name should start with an alphabetic letter (A through Z or a through z). The remaining characters should be A through Z, a through z, 0 through 9, or special characters \"_\".","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume","Name":"VolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[A-z][_A-z0-9]*"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppVolumes?$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"ExportPolicyName can be between 1 and 254 characters long depending on the device target selected it may vary.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy","Name":"ExportPolicyName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[{"DisplayAttributes":["Name"],"ObjectType":"workflow.MoReferenceProperty","Selector":"/api/v1/storage/NetAppExportPolicies?$apply=groupby((Name),aggregate($count as count))&$orderby=Name","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"},"ValueAttribute":"Name"}],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Volume","Name":"VolumeName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints","Regex":"[A-z][_A-z0-9]*"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy","Name":"ExportPolicyName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"RetryCount":5,"RetryDelay":30,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"This is a task to remove a NetApp export policy rule.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveStorageExportPolicyRule\" and Version eq 1"},"Label":"Remove NetApp Export Policy Rule","Name":"RemoveNetAppExportPolicyRule","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage vendor virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"PlatformType":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Virtual Machine","Name":"StorageVendorVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"ExportPolicyName can be between 1 and 254 characters long depending on the device target selected it may vary.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Name","Name":"ExportPolicyName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppExportPolicyNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Rule Index","Name":"RuleIndex","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":16384,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy","Name":"ExportPolicyName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"This is a task to create a NetApp export policy rule.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewStorageExportPolicyRule\" and Version eq 1"},"Label":"New NetApp Export Policy Rule","Name":"NewNetAppExportPolicyRule","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageTargetDataType","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Storage Device","Name":"StorageDevice","ObjectType":"workflow.TargetDataType","Properties":[],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Storage vendor virtual machine name.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"InputParameters":{"PlatformType":"${workflow.inputDataType.StorageTargetDataType.ObjectType}"},"Label":"Storage Vendor Virtual Machine","Name":"StorageVendorVirtualMachineName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"StorageVendorVirtualMachineNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"ExportPolicyName can be between 1 and 254 characters long depending on the device target selected it may vary.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Name","Name":"ExportPolicyName","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppExportPolicyNameType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of the match strings specifying the client or clients to which the export rule applies.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Client Match List","Max":500,"Min":1,"Name":"ClientMatchList","ObjectType":"workflow.ArrayDataType","Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of protocols for which you want to apply the export rule.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Protocols","Name":"ExportPolicyProtocols","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppExportPolicyProtocolsType","ObjectType":"workflow.CustomDataProperty"}},{"ArrayItemType":{"ObjectType":"workflow.CustomArrayItem","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppExportPolicyRuleType","ObjectType":"workflow.CustomDataProperty"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of Read Only export policy rules. This specifies the security type for read-only access to volumes that use the export rule.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Read Only Policy Rules","Max":8,"Min":1,"Name":"ReadOnlyPolicyRules","ObjectType":"workflow.ArrayDataType","Required":true},{"ArrayItemType":{"ObjectType":"workflow.CustomArrayItem","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"NetAppExportPolicyRuleType","ObjectType":"workflow.CustomDataProperty"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"List of Read Write export policy rules. This specifies the security type for read-write access to volumes that use the export rule.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Read Write Policy Rules","Max":8,"Min":1,"Name":"ReadWritePolicyRules","ObjectType":"workflow.ArrayDataType","Required":true},{"ArrayItemType":{"ObjectType":"workflow.PrimitiveArrayItem","Properties":{"Constraints":{"EnumList":[{"Label":"sys","ObjectType":"workflow.EnumEntry","Value":"sys"},{"Label":"krb5","ObjectType":"workflow.EnumEntry","Value":"krb5"},{"Label":"krb5i","ObjectType":"workflow.EnumEntry","Value":"krb5i"},{"Label":"krb5p","ObjectType":"workflow.EnumEntry","Value":"krb5p"},{"Label":"ntlm","ObjectType":"workflow.EnumEntry","Value":"ntlm"},{"Label":"any","ObjectType":"workflow.EnumEntry","Value":"any"},{"Label":"none","ObjectType":"workflow.EnumEntry","Value":"none"}],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"enum"}},"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Specifies a security type for superuser access to files.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Superuser Security Type","Max":7,"Min":1,"Name":"SuperuserSecurityType","ObjectType":"workflow.ArrayDataType"}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Export Policy Name","Name":"ExportPolicyName","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":254,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Rule Index","Name":"RuleIndex","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"Max":16384,"Min":1,"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"integer"},"Required":true}],"RetryCount":5,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":60,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.NetAppActiveIqUnifiedManager","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Remove a VMFS datastore from Vmware hypervisor.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveHypervisorDatastore\" and Version eq 2"},"Label":"Remove Hypervisor Datastore","Name":"RemoveHypervisorDatastoreImpl","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore is hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore is hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the datastore to be removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Disk associated with the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk name","Name":"NAAId","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"LUN number of the datastore that was removed.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"LUN Number","Name":"LUNNumber","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":10,"RetryPolicy":"Fixed","SupportStatus":"Beta","Timeout":150,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":2},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"ClassId":"workflow.TaskDefinition","DefaultVersion":true,"Description":"Create a new VMFS/NFS Datastore on Vmware hypervisor.","InterfaceTask":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewHypervisorDatastore\" and Version eq 1"},"Label":"New Hypervisor Datastore","Name":"NewHypervisorDatastoreVmwareImpl","ObjectType":"workflow.TaskDefinition","Properties":{"ExternalMeta":true,"InputDefinition":[{"CustomDataTypeProperties":{"CatalogMoid":"shared","ObjectType":"workflow.CustomDataProperty"},"Default":{"ObjectType":"workflow.DefaultValue"},"DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Hypervisor Manager","Name":"Vcenter","ObjectType":"workflow.TargetDataType","Properties":[{"DisplayAttributes":["DeviceHostname","Vendor"],"ObjectType":"workflow.TargetProperty","Selector":"/api/v1/asset/DeviceRegistrations?$filter=PlatformType eq 'VmwareVcenter'","SelectorProperty":{"Method":"GET","ObjectType":"workflow.SelectorProperty"}}],"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore will be hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name for the new datastore, limited to 42 characters.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints","Regex":"^.{1,42}$"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"},"Required":true},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type and version of the new datastore. Minimum datastore size: VMFS 5 - 1.3GB, VMFS 6 - 2GB. Kerberos support is enabled in NFS4.1 only.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Type of Datastore","Name":"DatastoreVersion","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreVersionsType","ObjectType":"workflow.CustomDataProperty"},"Required":true}],"ObjectType":"workflow.Properties","OutputDefinition":[{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Name of the newly created datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore","Name":"Datastore","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatastoreType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Datacenter associated with the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datacenter","Name":"Datacenter","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorDatacenterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type of the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"VMFS Version","Name":"VMFSVersion","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Type of the new datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Datastore Type","Name":"DatastoreType","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Cluster on which the datastore will be hosted.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Cluster","Name":"Cluster","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorClusterType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Host on which the datastore will be hosted. If cluster is specified, then host will be ignored.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Host","Name":"Host","ObjectType":"workflow.CustomDataType","Properties":{"CatalogMoid":"shared","CustomDataTypeName":"HypervisorHostType","ObjectType":"workflow.CustomDataProperty"}},{"Default":{"ObjectType":"workflow.DefaultValue"},"Description":"Disk identity of the newly created datastore.","DisplayMeta":{"InventorySelector":true,"ObjectType":"workflow.DisplayMeta","WidgetType":"None"},"Label":"Disk","Name":"Disk","ObjectType":"workflow.PrimitiveDataType","Properties":{"Constraints":{"EnumList":[],"ObjectType":"workflow.Constraints"},"InventorySelector":[],"ObjectType":"workflow.PrimitiveDataProperty","Type":"string"}}],"RetryCount":1,"RetryDelay":100,"RetryPolicy":"Fixed","SupportStatus":"Supported","Timeout":300,"TimeoutPolicy":"Retry"},"RollbackTasks":[],"SharedScope":"shared","Tags":[{"Key":"platformType.VmwareVcenter","Value":"true"}],"Version":1},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/TaskDefinitions","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetClusterUuid","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID successful.","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{ne .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID failed","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Uuid","ObjectType":"content.Parameter","Path":"$.Uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/storage/NetAppClusters/{{.global.task.input.StorageDevice.Moid}}?$select=Uuid"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppStorageVmRootVolumeDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 400) (le .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppStorageVmRootVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmRootVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppStorageVmRootVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmRootVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 501) (le .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppStorageVmRootVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmRootVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 200) }}","Message":"Retrieved SVM root volume successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeUuid","ObjectType":"content.Parameter","Path":"$.records[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeName","ObjectType":"content.Parameter","Path":"$.records[0].name","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?svm.name={{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}&is_svm_root=true"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppStorageVmDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppStorageVmDetails.output.HttpStatusCode 400) (le .global.GetNetAppStorageVmDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppStorageVmDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppStorageVmDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppStorageVmDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppStorageVmDetails.output.HttpStatusCode 501) (le .global.GetNetAppStorageVmDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppStorageVmDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (eq .global.GetNetAppStorageVmDetails.output.HttpStatusCode 200) (not .global.GetNetAppStorageVmDetails.output.SvmName) }}","Message":"No svm named '{{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}' found.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppStorageVmDetails.output.HttpStatusCode 200)}}","Message":"SVM retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"SvmUuid","ObjectType":"content.Parameter","Path":"$.records[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"SvmName","ObjectType":"content.Parameter","Path":"$.records[0].name","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/svm/svms?name={{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}"},{"Body":"{}","ContentType":"json","EndpointRequestType":"Internal","Method":"DELETE","Name":"RemoveStorageVm","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.RemoveStorageVm.output.HttpStatusCode 400) (le .global.RemoveStorageVm.output.HttpStatusCode 499)}}","Message":"{{if .global.RemoveStorageVm.output.Errors}}{{$err := (index .global.RemoveStorageVm.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveStorageVm.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.RemoveStorageVm.output.HttpStatusCode 500)}}","Message":"{{if .global.RemoveStorageVm.output.Errors}}{{$err := (index .global.RemoveStorageVm.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveStorageVm.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.RemoveStorageVm.output.HttpStatusCode 501) (le .global.RemoveStorageVm.output.HttpStatusCode 599)}}","Message":"{{if .global.RemoveStorageVm.output.Errors}}{{$err := (index .global.RemoveStorageVm.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveStorageVm.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.RemoveStorageVm.output.HttpStatusCode 202) }}","Message":"Job ID created successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobUuid","ObjectType":"content.Parameter","Path":"$.job.uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/svm/svms/{{.global.GetNetAppStorageVmDetails.output.SvmUuid}}?return_timeout=59"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetJobDetail","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 400) (le .global.GetJobDetail.output.HttpStatusCode 499)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetJobDetail.output.HttpStatusCode 500)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 501) (le .global.GetJobDetail.output.HttpStatusCode 599)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Failed\"{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"paused\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Paused\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"queued\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Queued\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"running\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Running\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"success\" }}","Message":"Received Job status successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobState","ObjectType":"content.Parameter","Path":"$.state","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"CompletedTime","ObjectType":"content.Parameter","Path":"$.end_time","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobMessage","ObjectType":"content.Parameter","Path":"$.message","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/cluster/jobs/{{.global.RemoveStorageVm.output.JobUuid}}"},{"Body":"{\"Type\":\"storage.NetAppVolume\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppStorageVmRootVolumeDetails.output.VolumeUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateVolumeInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"Removed Storage VM root volume successfully","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateVolumeInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","SkipOnCondition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppStorageVm\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppStorageVmDetails.output.SvmUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"Removed SVM successfully","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","SkipOnCondition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ObjectType":"storage.NetAppCluster"}},"Description":"Remove NetApp storage virtual machine.","ErrorResponseHandler":{"ObjectType":"workflow.ErrorResponseHandler","Selector":"Name eq \"NetAppApiErrorResponseHandler\""},"Name":"RemoveNetAppStorageVirtualMachine","ObjectType":"workflow.BatchApiExecutor","Output":{"StorageVirtualMachineName":"{{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}"},"RetryFromFailedApi":true,"SharedScope":"shared","SkipOnCondition":"{{if ne .global.task.input.StorageDevice.ObjectType \"storage.NetAppCluster\"}} true {{end}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveNetAppStorageVirtualMachine\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetClusterUuid","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID successful.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID failed","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Uuid","ObjectType":"content.Parameter","Path":"$.Uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/storage/NetAppClusters/{{.global.task.input.StorageDevice.Moid}}?$select=Uuid"},{"Body":"{ \"nfs\": {\"enabled\": {{(LookupInSlice .global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.StorageVmProtocols \"nfs\")}}}, \"iscsi\": {\"enabled\": {{(LookupInSlice .global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.StorageVmProtocols \"iscsi\")}}}, \"fcp\": {\"enabled\": {{(LookupInSlice .global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.StorageVmProtocols \"fcp\")}}}, \"cifs\": {\"enabled\": {{(LookupInSlice .global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.StorageVmProtocols \"cifs\")}}}, \"name\": \"{{.global.task.input.StorageVirtualMachineName}}\", \"ip_interfaces\": [{{if index .global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions \"ManagementInterfaceDetails\"}} {{if index .global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.ManagementInterfaceDetails \"InterfaceName\"}} { \"name\": \"{{.global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.ManagementInterfaceDetails.InterfaceName}}\" {{if index .global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.ManagementInterfaceDetails \"InterfaceIpv4Address\"}} , \"ip\": {\"address\": \"{{.global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.ManagementInterfaceDetails.InterfaceIpv4Address}}\" {{if index .global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.ManagementInterfaceDetails \"InterfaceIpv4subnetmask\"}}, \"netmask\": \"{{.global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.ManagementInterfaceDetails.InterfaceIpv4subnetmask}}\" {{end}}{{/* ipv4addr */}}},\"location\": { \"broadcast_domain\": {\"name\": \"{{if index .global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.ManagementInterfaceDetails \"BroadcastDomain\"}}{{.global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.ManagementInterfaceDetails.BroadcastDomain}}{{end}}{{/* bcastdomain */}}\" },\"home_node\": {\"name\": \"{{if index .global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.ManagementInterfaceDetails \"HomeNodeName\"}}{{.global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.ManagementInterfaceDetails.HomeNodeName}}{{end}}{{/* homenode */}}\" }} ,\"service_policy\": \"default-management\"} {{else}} {{/* ipv4addr */}}}{{end}} {{/* ipv4addr */}}{{else}} {{/* interfacename */}}{ \"name\": \"\" }{{end}}  {{/* interfacename */}}{{end}}], \"routes\": [ {{if index .global.task.input.StorageVendorVirtualMachineOptions \"RouteDestinationIpv4Gateway\"}} {{range $index, $route := .global.task.input.StorageVendorVirtualMachineOptions.RouteDestinationIpv4Gateway}} {{if $index}},{{end}} {\"gateway\": \"{{$route}}\"} {{end}} {{end}} ]}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewStorageVM","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.NewStorageVM.output.HttpStatusCode 400) (le .global.NewStorageVM.output.HttpStatusCode 499)}}","Message":"{{if .global.NewStorageVM.output.Errors}}{{$err := (index .global.NewStorageVM.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewStorageVM.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.NewStorageVM.output.HttpStatusCode 500)}}","Message":"{{if .global.NewStorageVM.output.Errors}}{{$err := (index .global.NewStorageVM.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewStorageVM.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.NewStorageVM.output.HttpStatusCode 501) (le .global.NewStorageVM.output.HttpStatusCode 599)}}","Message":"{{if .global.NewStorageVM.output.Errors}}{{$err := (index .global.NewStorageVM.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.NewStorageVM.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.NewStorageVM.output.HttpStatusCode 202) }}","Message":"Job ID created successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobUuid","ObjectType":"content.Parameter","Path":"$.job.uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/svm/svms?return_timeout=59"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetJobDetail","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 400) (le .global.GetJobDetail.output.HttpStatusCode 499)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetJobDetail.output.HttpStatusCode 500)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetJobDetail.output.HttpStatusCode 501) (le .global.GetJobDetail.output.HttpStatusCode 599)}}","Message":"{{if .global.GetJobDetail.output.Errors}}{{$err := (index .global.GetJobDetail.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetJobDetail.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Failed\"{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"paused\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Paused\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"queued\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Queued\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"running\" }}","Message":"HTTP Status code: {{.global.GetJobDetail.output.HttpStatusCode}}: {{if .global.GetJobDetail.output.JobMessage}} Job state: {{.global.GetJobDetail.output.JobState}} Message: {{.global.GetJobDetail.output.JobMessage}} CompletedTime: {{.global.GetJobDetail.output.CompletedTime}} {{ else }} Job status is \"Running\"{{end}}","ObjectType":"workflow.Outcome","Type":"Status"},{"Condition":"{{ ContainsString .global.GetJobDetail.output.JobState \"success\" }}","Message":"Received Job status successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobState","ObjectType":"content.Parameter","Path":"$.state","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"CompletedTime","ObjectType":"content.Parameter","Path":"$.end_time","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"JobMessage","ObjectType":"content.Parameter","Path":"$.message","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/cluster/jobs/{{.global.NewStorageVM.output.JobUuid}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppStorageVmDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppStorageVmDetails.output.HttpStatusCode 400) (le .global.GetNetAppStorageVmDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppStorageVmDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppStorageVmDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppStorageVmDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppStorageVmDetails.output.HttpStatusCode 501) (le .global.GetNetAppStorageVmDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppStorageVmDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppStorageVmDetails.output.HttpStatusCode 200) }}","Message":"Created SVM successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"StorageVirtualMachineName","ObjectType":"content.Parameter","Path":"$.records[0].name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"SvmUuid","ObjectType":"content.Parameter","Path":"$.records[0].uuid","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/svm/svms?name={{.global.task.input.StorageVirtualMachineName}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppStorageVmDetailsByUuid","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppStorageVmDetailsByUuid.output.HttpStatusCode 400) (le .global.GetNetAppStorageVmDetailsByUuid.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppStorageVmDetailsByUuid.output.Errors}}{{$err := (index .global.GetNetAppStorageVmDetailsByUuid.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmDetailsByUuid.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppStorageVmDetailsByUuid.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppStorageVmDetailsByUuid.output.Errors}}{{$err := (index .global.GetNetAppStorageVmDetailsByUuid.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmDetailsByUuid.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppStorageVmDetailsByUuid.output.HttpStatusCode 501) (le .global.GetNetAppStorageVmDetailsByUuid.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppStorageVmDetailsByUuid.output.Errors}}{{$err := (index .global.GetNetAppStorageVmDetailsByUuid.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmDetailsByUuid.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppStorageVmDetailsByUuid.output.HttpStatusCode 200) }}","Message":"Retrieved SVM successfully by uuid.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"InterfaceUuid","ObjectType":"content.Parameter","Path":"$.ip_interfaces[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ManagementInterfaceIpAddress","ObjectType":"content.Parameter","Path":"$.ip_interfaces[0].ip.address","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/svm/svms/{{.global.GetNetAppStorageVmDetails.output.SvmUuid}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppStorageVmRootVolumeDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 400) (le .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppStorageVmRootVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmRootVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppStorageVmRootVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmRootVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 501) (le .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppStorageVmRootVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppStorageVmRootVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ (eq .global.GetNetAppStorageVmRootVolumeDetails.output.HttpStatusCode 200) }}","Message":"Retrieved SVM root volume successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeUuid","ObjectType":"content.Parameter","Path":"$.records[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeName","ObjectType":"content.Parameter","Path":"$.records[0].name","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{ ContainsString .global.GetJobDetail.output.JobState \"failure\" }}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?svm.name={{.global.task.input.StorageVirtualMachineName}}&is_svm_root=true"},{"Body":"{ \"password\": \"{{.global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.Password}}\", \"locked\": false }","ContentType":"json","EndpointRequestType":"Internal","Method":"PATCH","Name":"UpdateAdminAccount","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.UpdateAdminAccount.output.HttpStatusCode 400) (le .global.UpdateAdminAccount.output.HttpStatusCode 499)}}","Message":"{{if .global.UpdateAdminAccount.output.Errors}}{{$err := (index .global.UpdateAdminAccount.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateAdminAccount.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.UpdateAdminAccount.output.HttpStatusCode 500)}}","Message":"{{if .global.UpdateAdminAccount.output.Errors}}{{$err := (index .global.UpdateAdminAccount.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateAdminAccount.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.UpdateAdminAccount.output.HttpStatusCode 501) (le .global.UpdateAdminAccount.output.HttpStatusCode 599)}}","Message":"{{if .global.UpdateAdminAccount.output.Errors}}{{$err := (index .global.UpdateAdminAccount.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateAdminAccount.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.UpdateAdminAccount.output.HttpStatusCode 200)}}","Message":"Updated vsadmin account.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","SkipOnCondition":"{{ or (not .global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.ManageAdministratorAccount) (ContainsString .global.GetJobDetail.output.JobState \"failure\") }}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/security/accounts/{{.global.GetNetAppStorageVmDetails.output.SvmUuid}}/vsadmin"},{"Body":"{ \"transport\": { \"udp_enabled\": false }, \"vstorage_enabled\": true }","ContentType":"json","EndpointRequestType":"Internal","Method":"PATCH","Name":"UpdateNfsService","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.UpdateNfsService.output.HttpStatusCode 400) (le .global.UpdateNfsService.output.HttpStatusCode 499)}}","Message":"{{if .global.UpdateNfsService.output.Errors}}{{$err := (index .global.UpdateNfsService.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateNfsService.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.UpdateNfsService.output.HttpStatusCode 500)}}","Message":"{{if .global.UpdateNfsService.output.Errors}}{{$err := (index .global.UpdateNfsService.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateNfsService.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.UpdateNfsService.output.HttpStatusCode 501) (le .global.UpdateNfsService.output.HttpStatusCode 599)}}","Message":"{{if .global.UpdateNfsService.output.Errors}}{{$err := (index .global.UpdateNfsService.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.UpdateNfsService.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.UpdateNfsService.output.HttpStatusCode 200)}}","Message":"Updated NFS Service so that UDP is disabled and vstorage is enabled.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","SkipOnCondition":"{{not (LookupInSlice .global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.StorageVmProtocols \"nfs\")}}","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/nfs/services/{{.global.GetNetAppStorageVmDetails.output.SvmUuid}}"},{"Body":"{\"Type\":\"storage.NetAppStorageVm\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppStorageVmDetails.output.SvmUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"Created Storage VM successfully","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppDataIpInterface\",\"Queries\": [ {\"Uuid\": \"{{.global.GetNetAppStorageVmDetailsByUuid.output.InterfaceUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateInterfaceInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateInterfaceInventory.output.HttpStatusCode 200}}","Message":"Created Storage VM successfully.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateInterfaceInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateInterfaceInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","SkipOnCondition":"{{ not .global.GetNetAppStorageVmDetailsByUuid.output.InterfaceUuid }}","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppVolume\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppStorageVmRootVolumeDetails.output.VolumeUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateVolumeInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"Created Storage VM successfully","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateVolumeInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateVolumeInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppNfsService\",\"Queries\": [{\"SvmUuid\": \"{{.global.GetNetAppStorageVmDetails.output.SvmUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateNfsServiceInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateNfsServiceInventory.output.HttpStatusCode 200}}","Message":"Created Storage VM successfully","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateNfsServiceInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateNfsServiceInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","SkipOnCondition":"{{not (LookupInSlice .global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.StorageVmProtocols \"nfs\")}}","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"},{"Body":"{\"Type\":\"storage.NetAppIscsiService\",\"Queries\": [{\"SvmUuid\": \"{{.global.GetNetAppStorageVmDetails.output.SvmUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateIscsiServiceInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateIscsiServiceInventory.output.HttpStatusCode 200}}","Message":"Created Storage VM successfully","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateIscsiServiceInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateIscsiServiceInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","SkipOnCondition":"{{not (LookupInSlice .global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.StorageVmProtocols \"iscsi\")}}","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ObjectType":"storage.NetAppCluster"}},"Description":"New NetApp virtual machine.","ErrorResponseHandler":{"ObjectType":"workflow.ErrorResponseHandler","Selector":"Name eq \"NetAppApiErrorResponseHandler\""},"Name":"NewNetAppVirtualMachine","ObjectType":"workflow.BatchApiExecutor","Output":{"ManagementInterfaceIpAddress":"{{.global.GetNetAppStorageVmDetailsByUuid.output.ManagementInterfaceIpAddress}}","StorageVirtualMachineName":"{\"StorageVirtualMachineName\":\"{{.global.GetNetAppStorageVmDetails.output.StorageVirtualMachineName}}\", \"PlatformType\":\"storage.NetAppCluster\"}","StorageVirtualMachineNameRootVolume":"{{.global.GetNetAppStorageVmRootVolumeDetails.output.VolumeName}}","StorageVmProtocols":"{{.global.task.input.StorageVendorVirtualMachineOptions.NetAppVirtualMachineOptions.StorageVmProtocols}}"},"RetryFromFailedApi":true,"SharedScope":"shared","SkipOnCondition":"{{if ne .global.task.input.StorageDevice.ObjectType \"storage.NetAppCluster\"}} true {{end}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewNetAppVirtualMachine\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetClusterUuid","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID successful.","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{ne .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID failed","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Uuid","ObjectType":"content.Parameter","Path":"$.Uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/storage/NetAppClusters/{{.global.task.input.StorageDevice.Moid}}?$select=Uuid"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppExportPolicy","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppExportPolicy.output.HttpStatusCode 400)  (le .global.GetNetAppExportPolicy.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppExportPolicy.output.Errors}}{{$err := (index .global.GetNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppExportPolicy.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppExportPolicy.output.Errors}}{{$err := (index .global.GetNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppExportPolicy.output.HttpStatusCode 501)  (le .global.GetNetAppExportPolicy.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppExportPolicy.output.Errors}}{{$err := (index .global.GetNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ and (eq .global.GetNetAppExportPolicy.output.HttpStatusCode 200) (not .global.GetNetAppExportPolicy.output.ExportPolicyName) }}","Message":"the export policy named '{{ .global.task.input.ExportPolicyName}}' is not present on  the SVM named '{{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}', and cannot be applied to its volumes","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppExportPolicy.output.HttpStatusCode 200)}}","Message":"Export Policy retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ExportPolicyName","ObjectType":"content.Parameter","Path":"$.records[0].name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ExportPolicyId","ObjectType":"content.Parameter","Path":"$.records[0].id","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"NumberOfRecord","ObjectType":"content.Parameter","Path":"$.num_records","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/nfs/export-policies?name={{.global.task.input.ExportPolicyName}}&svm.name={{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppVolumeDetails","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppVolumeDetails.output.HttpStatusCode 400) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppVolumeDetails.output.HttpStatusCode 501) (le .global.GetNetAppVolumeDetails.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppVolumeDetails.output.Errors}}{{$err := (index .global.GetNetAppVolumeDetails.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppVolumeDetails.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ and (eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 200) (not .global.GetNetAppVolumeDetails.output.VolumeUuid) }}","Message":"the volume named '{{ .global.task.input.VolumeName}}' is not present on the SVM named '{{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}'","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ (eq .global.GetNetAppVolumeDetails.output.HttpStatusCode 200) }}","Message":"Retrieved NAS Volume successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VolumeUuid","ObjectType":"content.Parameter","Path":"$.records[0].uuid","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"NumberOfRecord","ObjectType":"content.Parameter","Path":"$.num_records","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?name={{.global.task.input.VolumeName}}&svm.name={{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}"},{"Body":"{\"nas\": {\"export_policy\": {\"name\": \"{{.global.GetNetAppExportPolicy.output.ExportPolicyName}}\"}}}","ContentType":"json","EndpointRequestType":"Internal","Method":"PATCH","Name":"AddExportPolicyVolume","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.AddExportPolicyVolume.output.HttpStatusCode 400) (le .global.AddExportPolicyVolume.output.HttpStatusCode 499)}}","Message":"{{if .global.AddExportPolicyVolume.output.Errors}}{{$err := (index .global.AddExportPolicyVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.AddExportPolicyVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.AddExportPolicyVolume.output.HttpStatusCode 500)}}","Message":"{{if .global.AddExportPolicyVolume.output.Errors}}{{$err := (index .global.AddExportPolicyVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.AddExportPolicyVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.AddExportPolicyVolume.output.HttpStatusCode 501) (le .global.AddExportPolicyVolume.output.HttpStatusCode 599)}}","Message":"{{if .global.AddExportPolicyVolume.output.Errors}}{{$err := (index .global.AddExportPolicyVolume.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.AddExportPolicyVolume.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.AddExportPolicyVolume.output.HttpStatusCode 200)}}","Message":"Export Policy added successfully to the Volume.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/storage/volumes?name={{.global.task.input.VolumeName}}&svm.name={{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}"},{"Body":"{\"Type\":\"storage.NetAppVolume\",\"Queries\": [{\"Uuid\": \"{{.global.GetNetAppVolumeDetails.output.VolumeUuid}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}], \"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"Export Policy added successfully to the Volume","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{ne .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ObjectType":"storage.NetAppCluster"}},"Description":"Add NetApp export policy to volume.","ErrorResponseHandler":{"ObjectType":"workflow.ErrorResponseHandler","Selector":"Name eq \"NetAppApiErrorResponseHandler\""},"Name":"AddNetAppExportPolicyToVolume","ObjectType":"workflow.BatchApiExecutor","Output":{"ExportPolicyName":"{{.global.task.input.ExportPolicyName}}","VolumeName":"{{.global.task.input.VolumeName}}"},"RetryFromFailedApi":true,"SharedScope":"shared","SkipOnCondition":"{{if ne .global.task.input.StorageDevice.ObjectType \"storage.NetAppCluster\"}} true {{end}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"AddNetAppExportPolicyToVolume\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetClusterUuid","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID successful.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID failed","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Uuid","ObjectType":"content.Parameter","Path":"$.Uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/storage/NetAppClusters/{{.global.task.input.StorageDevice.Moid}}?$select=Uuid"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppExportPolicy","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppExportPolicy.output.HttpStatusCode 400)  (le .global.GetNetAppExportPolicy.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppExportPolicy.output.Errors}}{{$err := (index .global.GetNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppExportPolicy.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppExportPolicy.output.Errors}}{{$err := (index .global.GetNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppExportPolicy.output.HttpStatusCode 501)  (le .global.GetNetAppExportPolicy.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppExportPolicy.output.Errors}}{{$err := (index .global.GetNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ and (eq .global.GetNetAppExportPolicy.output.HttpStatusCode 200) (not .global.GetNetAppExportPolicy.output.ExportPolicyName) }}","Message":"No export policy named '{{ .global.task.input.ExportPolicyName}}' found.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppExportPolicy.output.HttpStatusCode 200)}}","Message":"Export Policy retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ExportPolicyName","ObjectType":"content.Parameter","Path":"$.records[0].name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ExportPolicyId","ObjectType":"content.Parameter","Path":"$.records[0].id","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"NumberOfRecord","ObjectType":"content.Parameter","Path":"$.num_records","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/nfs/export-policies?name={{.global.task.input.ExportPolicyName}}&svm.name={{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"DELETE","Name":"RemoveNetAppExportPolicyRule","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.RemoveNetAppExportPolicyRule.output.HttpStatusCode 400)  (le .global.RemoveNetAppExportPolicyRule.output.HttpStatusCode 499)}}","Message":"{{if .global.RemoveNetAppExportPolicyRule.output.Errors}}{{$err := (index .global.RemoveNetAppExportPolicyRule.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveNetAppExportPolicyRule.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.RemoveNetAppExportPolicyRule.output.HttpStatusCode 500)}}","Message":"{{if .global.RemoveNetAppExportPolicyRule.output.Errors}}{{$err := (index .global.RemoveNetAppExportPolicyRule.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveNetAppExportPolicyRule.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.RemoveNetAppExportPolicyRule.output.HttpStatusCode 501)  (le .global.RemoveNetAppExportPolicyRule.output.HttpStatusCode 599)}}","Message":"{{if .global.RemoveNetAppExportPolicyRule.output.Errors}}{{$err := (index .global.RemoveNetAppExportPolicyRule.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.RemoveNetAppExportPolicyRule.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.RemoveNetAppExportPolicyRule.output.HttpStatusCode 200)}}","Message":"Export Policy Rule removed successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/nfs/export-policies/{{Ftoi .global.GetNetAppExportPolicy.output.ExportPolicyId}}/rules/{{.global.task.input.RuleIndex}}"},{"Body":"{\"Type\":\"storage.NetAppExportPolicy\",\"Queries\": [{\"PolicyId\": \"{{Ftoi .global.GetNetAppExportPolicy.output.ExportPolicyId}}\", \"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"Export Policy Rule removed successfully","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ObjectType":"storage.NetAppCluster"}},"Description":"Remove NetApp export policy rule.","ErrorResponseHandler":{"ObjectType":"workflow.ErrorResponseHandler","Selector":"Name eq \"NetAppApiErrorResponseHandler\""},"Name":"RemoveNetAppExportPolicyRule","ObjectType":"workflow.BatchApiExecutor","Output":{"ExportPolicyName":"{{.global.GetNetAppExportPolicy.output.ExportPolicyName}}"},"RetryFromFailedApi":true,"SharedScope":"shared","SkipOnCondition":"{{if ne .global.task.input.StorageDevice.ObjectType \"storage.NetAppCluster\"}} true {{end}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveNetAppExportPolicyRule\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetClusterUuid","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID successful.","ObjectType":"workflow.Outcome"},{"Condition":"{{ne .global.GetClusterUuid.output.HttpStatusCode 200}}","Message":"Get Cluster UUID failed","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Uuid","ObjectType":"content.Parameter","Path":"$.Uuid","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Local","Url":"/v1/storage/NetAppClusters/{{.global.task.input.StorageDevice.Moid}}?$select=Uuid"},{"ContentType":"json","EndpointRequestType":"Internal","Method":"GET","Name":"GetNetAppExportPolicy","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.GetNetAppExportPolicy.output.HttpStatusCode 400)  (le .global.GetNetAppExportPolicy.output.HttpStatusCode 499)}}","Message":"{{if .global.GetNetAppExportPolicy.output.Errors}}{{$err := (index .global.GetNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppExportPolicy.output.HttpStatusCode 500)}}","Message":"{{if .global.GetNetAppExportPolicy.output.Errors}}{{$err := (index .global.GetNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.GetNetAppExportPolicy.output.HttpStatusCode 501)  (le .global.GetNetAppExportPolicy.output.HttpStatusCode 599)}}","Message":"{{if .global.GetNetAppExportPolicy.output.Errors}}{{$err := (index .global.GetNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.GetNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{ and (eq .global.GetNetAppExportPolicy.output.HttpStatusCode 200) (not .global.GetNetAppExportPolicy.output.ExportPolicyName) }}","Message":"The export policy named '{{ .global.task.input.ExportPolicyName}}' is not present on  the SVM named '{{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}'.","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.GetNetAppExportPolicy.output.HttpStatusCode 200)}}","Message":"Export Policy retrieved successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ExportPolicyName","ObjectType":"content.Parameter","Path":"$.records[0].name","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"ExportPolicyId","ObjectType":"content.Parameter","Path":"$.records[0].id","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/nfs/export-policies?name={{.global.task.input.ExportPolicyName}}&svm.name={{.global.task.input.StorageVendorVirtualMachineName.StorageVirtualMachineName}}"},{"Body":"{ {{if .global.task.input.ClientMatchList}} \"clients\": [ {{range $index, $client:=.global.task.input.ClientMatchList}} {{if $index}},{{end}} {\"match\": \"{{$client}}\"} {{end}} ] {{end}} {{if .global.task.input.SuperuserSecurityType}},\"superuser\": [{{range $index, $securityType:= .global.task.input.SuperuserSecurityType}} {{if $index}},{{end}}\"{{$securityType}}\" {{end}}] {{end}} {{if .global.task.input.ExportPolicyProtocols}},\"protocols\": [{{range $index, $protocols:= .global.task.input.ExportPolicyProtocols}} {{if $index}},{{end}}\"{{$protocols}}\" {{end}}] {{end}} {{if .global.task.input.ReadOnlyPolicyRules}},\"ro_rule\": [{{range $index, $ro_rule:= .global.task.input.ReadOnlyPolicyRules}} {{if $index}},{{end}}\"{{$ro_rule.Authentication}}\" {{end}}] {{end}} {{if .global.task.input.ReadWritePolicyRules}}, \"rw_rule\": [{{range $index, $rw_rule:= .global.task.input.ReadWritePolicyRules}} {{if $index}},{{end}}\"{{$rw_rule.Authentication}}\" {{end}}] {{end}}}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"AddNetAppExportPolicy","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (ge .global.AddNetAppExportPolicy.output.HttpStatusCode 400) (le .global.AddNetAppExportPolicy.output.HttpStatusCode 499)}}","Message":"{{if .global.AddNetAppExportPolicy.output.Errors}}{{$err := (index .global.AddNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.AddNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{(eq .global.AddNetAppExportPolicy.output.HttpStatusCode 500)}}","Message":"{{if .global.AddNetAppExportPolicy.output.Errors}}{{$err := (index .global.AddNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.AddNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"TerminalError"},{"Condition":"{{ and (ge .global.AddNetAppExportPolicy.output.HttpStatusCode 501) (le .global.AddNetAppExportPolicy.output.HttpStatusCode 599)}}","Message":"{{if .global.AddNetAppExportPolicy.output.Errors}}{{$err := (index .global.AddNetAppExportPolicy.output.Errors 0)}}{{if (index $err \"Ctx\")}}{{$err.ErrorCode}}: {{end}}{{$err.Msg}}{{else}}{{.global.AddNetAppExportPolicy.output.HttpStatusMsg}}{{end}}","ObjectType":"workflow.Outcome","Type":"Error"},{"Condition":"{{(eq .global.AddNetAppExportPolicy.output.HttpStatusCode 201)}}","Message":"Export policy rule added successfully.","ObjectType":"workflow.Outcome","Type":"Success"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"RuleIndex","ObjectType":"content.Parameter","Path":"$.records[0].index","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Url":"/api/gateways/{{.global.GetClusterUuid.output.Uuid}}/protocols/nfs/export-policies/{{Ftoi .global.GetNetAppExportPolicy.output.ExportPolicyId}}/rules?return_records=true"},{"Body":"{\"Type\":\"storage.NetAppExportPolicy\",\"Queries\": [{\"PolicyId\": \"{{Ftoi .global.GetNetAppExportPolicy.output.ExportPolicyId}}\",\"ClusterUuid\": \"{{.global.GetClusterUuid.output.Uuid}}\"}],\"RegisteredDevice\":\"{{.global.task.target.RegisteredDeviceMoid}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"UpdateInventory","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{eq .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"Export policy rule added successfully","ObjectType":"workflow.Outcome","Type":"Success"},{"Condition":"{{ne .global.UpdateInventory.output.HttpStatusCode 200}}","Message":"{{.global.UpdateInventory.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome","Type":"Error"}],"Protocol":"https","TargetType":"Local","Url":"/v1/task/NetAppScopedInventories"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints","TargetDataType":{"ObjectType":"storage.NetAppCluster"}},"Description":"New NetApp export policy rule.","ErrorResponseHandler":{"ObjectType":"workflow.ErrorResponseHandler","Selector":"Name eq \"NetAppApiErrorResponseHandler\""},"Name":"NewNetAppExportPolicyRule","ObjectType":"workflow.BatchApiExecutor","Output":{"ExportPolicyName":"{{.global.task.input.ExportPolicyName}}","RuleIndex":"{{.global.AddNetAppExportPolicy.output.RuleIndex}}"},"RetryFromFailedApi":true,"SharedScope":"shared","SkipOnCondition":"{{if ne .global.task.input.StorageDevice.ObjectType \"storage.NetAppCluster\"}} true {{end}}","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewNetAppExportPolicyRule\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"Body":"{ \"Datastore\":\"{{.global.task.input.Datastore}}\",  \"Cluster\":{{ if .global.task.input.Cluster}}\"{{.global.task.input.Cluster}}\",{{else}}\"\",{{end}}   \"Host\":{{ if .global.task.input.Host}}\"{{.global.task.input.Host}}\",{{else}}\"\",{{end}}  \"Datacenter\":\"{{.global.task.input.Datacenter}}\" }","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"RemoveHypervisorDatastoreImpl","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{ and (eq .global.RemoveHypervisorDatastoreImpl.output.HttpStatusCode 400) ( or (ContainsString .global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg \"Datastore\") (ContainsString .global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg \"datastore\") ) (ContainsString .global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg \"not found\") }}","Message":"Datastore delete request marked successful. Message: {{.global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg}}. ","ObjectType":"workflow.Outcome"},{"Condition":"{{(ne .global.RemoveHypervisorDatastoreImpl.output.HttpStatusCode 200)}}","Error":true,"Message":"Failed to remove datastore. Message: {{.global.RemoveHypervisorDatastoreImpl.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Datastore '{{.global.RemoveHypervisorDatastoreImpl.output.DatastoreName}}' removed successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datastore","ObjectType":"content.Parameter","Path":"$.Datastore","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreName","ObjectType":"content.Parameter","Path":"$.DatastoreName","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"NAAId","ObjectType":"content.Parameter","Path":"$.NAAId","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"LUNNumber","ObjectType":"content.Parameter","Path":"$.LUNNumber","Secure":false,"Type":"simple"}],"Types":[]},"TargetType":"Endpoint","Timeout":120,"Url":"/task/Execute/RemoveDatastore"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Remove VMFS or NFS datastore from Vmware hypervisor.","Name":"RemoveHypervisorDatastoreImpl","ObjectType":"workflow.BatchApiExecutor","Output":{"Datastore":"{{.global.RemoveHypervisorDatastoreImpl.output.Datastore}}","LUNNumber":"{{.global.RemoveHypervisorDatastoreImpl.output.LUNNumber}}","NAAId":"{{.global.RemoveHypervisorDatastoreImpl.output.NAAId}}"},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"RemoveHypervisorDatastoreImpl\" and Version eq 2"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"},{"Body":{"Batch":[{"Body":"{ \"Datacenter\":\"{{.global.task.input.Datacenter}}\",\"Datastore\":\"{{.global.task.input.Datastore}}\",\"Disk\":{{ if .global.task.input.DatastoreVersion.Disk}}\"{{.global.task.input.DatastoreVersion.Disk}}\",{{else}}\"\",{{end}} \"Cluster\":{{ if .global.task.input.Cluster}}\"{{.global.task.input.Cluster}}\",{{else}}\"\",{{end}}   \"Host\":{{ if .global.task.input.Host}}\"{{.global.task.input.Host}}\",{{else}}\"\",{{end}} \"VMFSVersion\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\", \"DatastoreType\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\"}","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewHypervisorDatastoreVmwareImplVMFS","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.NewHypervisorDatastoreVmwareImplVMFS.output.HttpStatusCode 200)}}","Error":true,"Message":"Failed to create datastore. Message: {{.global.NewHypervisorDatastoreVmwareImplVMFS.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Datastore '{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.DatastoreName}}' created successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datastore","ObjectType":"content.Parameter","Path":"$.Datastore","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datacenter","ObjectType":"content.Parameter","Path":"$.Datacenter","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VMFSVersion","ObjectType":"content.Parameter","Path":"$.VMFSVersion","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreType","ObjectType":"content.Parameter","Path":"$.DatastoreType","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Disk","ObjectType":"content.Parameter","Path":"$.Disk","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Host","ObjectType":"content.Parameter","Path":"$.Host","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Cluster","ObjectType":"content.Parameter","Path":"$.Cluster","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreName","ObjectType":"content.Parameter","Path":"$.DatastoreName","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{and (ne .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\")  (ne .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\") }}","TargetType":"Endpoint","Timeout":270,"Url":"/task/Execute/NewVmfsDatastore"},{"Body":"{ \"Datacenter\":\"{{.global.task.input.Datacenter}}\",\"Datastore\":\"{{.global.task.input.Datastore}}\",\"Cluster\":{{ if .global.task.input.Cluster}}\"{{.global.task.input.Cluster}}\",{{else}}\"\",{{end}}   \"Host\":{{ if .global.task.input.Host}}\"{{.global.task.input.Host}}\",{{else}}\"\",{{end}} \"VMFSVersion\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\", \"DatastoreType\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\",\"RemotePath\":{{if .global.task.input.DatastoreVersion.RemotePath}}\"{{.global.task.input.DatastoreVersion.RemotePath}}\", {{else}} \"\",{{end}} \"RemoteHostNames\":{{.global.task.input.DatastoreVersion.RemoteHostNames | ToJson}}, \"AccessMode\":{{if .global.task.input.DatastoreVersion.AccessMode}}\"{{.global.task.input.DatastoreVersion.AccessMode}}\" {{else}}\"\"{{end}} }","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewHypervisorDatastoreVmwareImplNFS","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.NewHypervisorDatastoreVmwareImplNFS.output.HttpStatusCode 200)}}","Error":true,"Message":"{{.global.NewHypervisorDatastoreVmwareImplNFS.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Datastore '{{.global.NewHypervisorDatastoreVmwareImplNFS.output.DatastoreName}}' created successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datastore","ObjectType":"content.Parameter","Path":"$.Datastore","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datacenter","ObjectType":"content.Parameter","Path":"$.Datacenter","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VMFSVersion","ObjectType":"content.Parameter","Path":"$.VMFSVersion","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreType","ObjectType":"content.Parameter","Path":"$.DatastoreType","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Disk","ObjectType":"content.Parameter","Path":"$.Disk","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Host","ObjectType":"content.Parameter","Path":"$.Host","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreName","ObjectType":"content.Parameter","Path":"$.DatastoreName","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Cluster","ObjectType":"content.Parameter","Path":"$.Cluster","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{ne .global.task.input.DatastoreVersion.VMFSVersion \"NFS\"}}","TargetType":"Endpoint","Timeout":270,"Url":"/task/Execute/NewVmfsDatastore"},{"Body":"{ \"Datacenter\":\"{{.global.task.input.Datacenter}}\",\"Datastore\":\"{{.global.task.input.Datastore}}\",\"Cluster\":{{ if .global.task.input.Cluster}}\"{{.global.task.input.Cluster}}\",{{else}}\"\",{{end}}   \"Host\":{{ if .global.task.input.Host}}\"{{.global.task.input.Host}}\",{{else}}\"\",{{end}} \"VMFSVersion\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\", \"DatastoreType\":\"{{.global.task.input.DatastoreVersion.VMFSVersion}}\",\"RemotePath\":{{if .global.task.input.DatastoreVersion.RemotePath}}\"{{.global.task.input.DatastoreVersion.RemotePath}}\", {{else}} \"\",{{end}} \"RemoteHostNames\":{{.global.task.input.DatastoreVersion.RemoteHostNames | ToJson}}, \"AccessMode\":{{if .global.task.input.DatastoreVersion.AccessMode}}\"{{.global.task.input.DatastoreVersion.AccessMode}}\", {{else}}\"\",{{end}} \"SecurityType\":{{if .global.task.input.DatastoreVersion.SecurityType}}\"{{.global.task.input.DatastoreVersion.SecurityType}}\" {{else}} \"\"{{end}} }","ContentType":"json","EndpointRequestType":"Internal","Method":"POST","Name":"NewHypervisorDatastoreVmwareImplNFS41","ObjectType":"workflow.WebApi","Outcomes":[{"Condition":"{{(ne .global.NewHypervisorDatastoreVmwareImplNFS41.output.HttpStatusCode 200)}}","Error":true,"Message":"{{.global.NewHypervisorDatastoreVmwareImplNFS41.output.HttpStatusMsg}}","ObjectType":"workflow.Outcome"},{"Condition":"true","Message":"Datastore '{{.global.NewHypervisorDatastoreVmwareImplNFS41.output.DatastoreName}}' created successfully","ObjectType":"workflow.Outcome"}],"Protocol":"https","ResponseSpec":{"ErrorParameters":[],"ObjectType":"content.Grammar","Parameters":[{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datastore","ObjectType":"content.Parameter","Path":"$.Datastore","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Datacenter","ObjectType":"content.Parameter","Path":"$.Datacenter","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"VMFSVersion","ObjectType":"content.Parameter","Path":"$.VMFSVersion","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreType","ObjectType":"content.Parameter","Path":"$.DatastoreType","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Disk","ObjectType":"content.Parameter","Path":"$.Disk","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Host","ObjectType":"content.Parameter","Path":"$.Host","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"Cluster","ObjectType":"content.Parameter","Path":"$.Cluster","Secure":false,"Type":"simple"},{"AcceptSingleValue":false,"ComplexType":"","ItemType":"simple","Name":"DatastoreName","ObjectType":"content.Parameter","Path":"$.DatastoreName","Secure":false,"Type":"simple"}],"Types":[]},"SkipOnCondition":"{{ne .global.task.input.DatastoreVersion.VMFSVersion \"NFS41\"}}","TargetType":"Endpoint","Timeout":270,"Url":"/task/Execute/NewVmfsDatastore"}],"CancelAction":[],"ClassId":"workflow.BatchApiExecutor","Constraints":{"ObjectType":"workflow.TaskConstraints"},"Description":"Create a new VMFS/NFS Datastore on Vmware hypervisor.","Name":"NewHypervisorDatastoreVmwareImpl","ObjectType":"workflow.BatchApiExecutor","Output":{"Cluster":"{{if .global.task.input.Cluster}}{{.global.task.input.Cluster}}{{end}}","Datacenter":"{{.global.task.input.Datacenter}}","Datastore":"{{if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.Datastore}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.Datastore}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"NFS41\"}}{{.global.NewHypervisorDatastoreVmwareImplNFS41.output.Datastore}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"NFS\"}}{{.global.NewHypervisorDatastoreVmwareImplNFS.output.Datastore}}{{end}}","DatastoreType":"{{if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.DatastoreType}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.DatastoreType}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"NFS41\"}}{{.global.NewHypervisorDatastoreVmwareImplNFS41.output.DatastoreType}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"NFS\"}}{{.global.NewHypervisorDatastoreVmwareImplNFS.output.DatastoreType}}{{end}}","Disk":"{{if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.Disk}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\"}}{{.global.NewHypervisorDatastoreVmwareImplVMFS.output.Disk}}{{end}}","Host":"{{if .global.task.input.Host}}{{.global.task.input.Host}}{{end}}","VMFSVersion":"{{if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS6\"}}{{.global.task.input.DatastoreVersion.VMFSVersion}}{{else if eq .global.task.input.DatastoreVersion.VMFSVersion \"VMFS5\"}}{{.global.task.input.DatastoreVersion.VMFSVersion}}{{end}}"},"SharedScope":"shared","TaskDefinition":{"ObjectType":"workflow.TaskDefinition","Selector":"Name eq \"NewHypervisorDatastoreVmwareImpl\" and Version eq 1"}},"ClassId":"bulk.RestSubRequest","ObjectType":"bulk.RestSubRequest","TargetMoid":"","Uri":"/v1/workflow/BatchApiExecutors","Verb":"POST"}]